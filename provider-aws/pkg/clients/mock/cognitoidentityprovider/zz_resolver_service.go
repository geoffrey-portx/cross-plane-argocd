// /*
// Copyright 2021 The Crossplane Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/crossplane-contrib/provider-aws/pkg/clients/cognitoidentityprovider (interfaces: ResolverService)

// Package cognitoidentityprovider is a generated GoMock package.
package cognitoidentityprovider

import (
	context "context"
	reflect "reflect"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	gomock "github.com/golang/mock/gomock"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// MockResolverService is a mock of ResolverService interface.
type MockResolverService struct {
	ctrl     *gomock.Controller
	recorder *MockResolverServiceMockRecorder
}

// MockResolverServiceMockRecorder is the mock recorder for MockResolverService.
type MockResolverServiceMockRecorder struct {
	mock *MockResolverService
}

// NewMockResolverService creates a new mock instance.
func NewMockResolverService(ctrl *gomock.Controller) *MockResolverService {
	mock := &MockResolverService{ctrl: ctrl}
	mock.recorder = &MockResolverServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResolverService) EXPECT() *MockResolverServiceMockRecorder {
	return m.recorder
}

// GetProviderDetails mocks base method.
func (m *MockResolverService) GetProviderDetails(arg0 context.Context, arg1 client.Client, arg2 *v1.SecretReference) (map[string]*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProviderDetails", arg0, arg1, arg2)
	ret0, _ := ret[0].(map[string]*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProviderDetails indicates an expected call of GetProviderDetails.
func (mr *MockResolverServiceMockRecorder) GetProviderDetails(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProviderDetails", reflect.TypeOf((*MockResolverService)(nil).GetProviderDetails), arg0, arg1, arg2)
}
