/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package distribution

import (
	"github.com/aws/aws-sdk-go/aws/awserr"
	svcsdk "github.com/aws/aws-sdk-go/service/cloudfront"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	svcapitypes "github.com/crossplane-contrib/provider-aws/apis/cloudfront/v1alpha1"
)

// NOTE(muvaf): We return pointers in case the function needs to start with an
// empty object, hence need to return a new pointer.

// GenerateGetDistributionInput returns input for read
// operation.
func GenerateGetDistributionInput(cr *svcapitypes.Distribution) *svcsdk.GetDistributionInput {
	res := &svcsdk.GetDistributionInput{}

	return res
}

// GenerateDistribution returns the current state in the form of *svcapitypes.Distribution.
func GenerateDistribution(resp *svcsdk.GetDistributionOutput) *svcapitypes.Distribution {
	cr := &svcapitypes.Distribution{}

	if resp.Distribution != nil {
		f0 := &svcapitypes.Distribution_SDK{}
		if resp.Distribution.ARN != nil {
			f0.ARN = resp.Distribution.ARN
		}
		if resp.Distribution.ActiveTrustedKeyGroups != nil {
			f0f1 := &svcapitypes.ActiveTrustedKeyGroups{}
			if resp.Distribution.ActiveTrustedKeyGroups.Enabled != nil {
				f0f1.Enabled = resp.Distribution.ActiveTrustedKeyGroups.Enabled
			}
			if resp.Distribution.ActiveTrustedKeyGroups.Items != nil {
				f0f1f1 := []*svcapitypes.KGKeyPairIDs{}
				for _, f0f1f1iter := range resp.Distribution.ActiveTrustedKeyGroups.Items {
					f0f1f1elem := &svcapitypes.KGKeyPairIDs{}
					if f0f1f1iter.KeyGroupId != nil {
						f0f1f1elem.KeyGroupID = f0f1f1iter.KeyGroupId
					}
					if f0f1f1iter.KeyPairIds != nil {
						f0f1f1elemf1 := &svcapitypes.KeyPairIDs{}
						if f0f1f1iter.KeyPairIds.Items != nil {
							f0f1f1elemf1f0 := []*string{}
							for _, f0f1f1elemf1f0iter := range f0f1f1iter.KeyPairIds.Items {
								var f0f1f1elemf1f0elem string
								f0f1f1elemf1f0elem = *f0f1f1elemf1f0iter
								f0f1f1elemf1f0 = append(f0f1f1elemf1f0, &f0f1f1elemf1f0elem)
							}
							f0f1f1elemf1.Items = f0f1f1elemf1f0
						}
						if f0f1f1iter.KeyPairIds.Quantity != nil {
							f0f1f1elemf1.Quantity = f0f1f1iter.KeyPairIds.Quantity
						}
						f0f1f1elem.KeyPairIDs = f0f1f1elemf1
					}
					f0f1f1 = append(f0f1f1, f0f1f1elem)
				}
				f0f1.Items = f0f1f1
			}
			if resp.Distribution.ActiveTrustedKeyGroups.Quantity != nil {
				f0f1.Quantity = resp.Distribution.ActiveTrustedKeyGroups.Quantity
			}
			f0.ActiveTrustedKeyGroups = f0f1
		}
		if resp.Distribution.ActiveTrustedSigners != nil {
			f0f2 := &svcapitypes.ActiveTrustedSigners{}
			if resp.Distribution.ActiveTrustedSigners.Enabled != nil {
				f0f2.Enabled = resp.Distribution.ActiveTrustedSigners.Enabled
			}
			if resp.Distribution.ActiveTrustedSigners.Items != nil {
				f0f2f1 := []*svcapitypes.Signer{}
				for _, f0f2f1iter := range resp.Distribution.ActiveTrustedSigners.Items {
					f0f2f1elem := &svcapitypes.Signer{}
					if f0f2f1iter.AwsAccountNumber != nil {
						f0f2f1elem.AWSAccountNumber = f0f2f1iter.AwsAccountNumber
					}
					if f0f2f1iter.KeyPairIds != nil {
						f0f2f1elemf1 := &svcapitypes.KeyPairIDs{}
						if f0f2f1iter.KeyPairIds.Items != nil {
							f0f2f1elemf1f0 := []*string{}
							for _, f0f2f1elemf1f0iter := range f0f2f1iter.KeyPairIds.Items {
								var f0f2f1elemf1f0elem string
								f0f2f1elemf1f0elem = *f0f2f1elemf1f0iter
								f0f2f1elemf1f0 = append(f0f2f1elemf1f0, &f0f2f1elemf1f0elem)
							}
							f0f2f1elemf1.Items = f0f2f1elemf1f0
						}
						if f0f2f1iter.KeyPairIds.Quantity != nil {
							f0f2f1elemf1.Quantity = f0f2f1iter.KeyPairIds.Quantity
						}
						f0f2f1elem.KeyPairIDs = f0f2f1elemf1
					}
					f0f2f1 = append(f0f2f1, f0f2f1elem)
				}
				f0f2.Items = f0f2f1
			}
			if resp.Distribution.ActiveTrustedSigners.Quantity != nil {
				f0f2.Quantity = resp.Distribution.ActiveTrustedSigners.Quantity
			}
			f0.ActiveTrustedSigners = f0f2
		}
		if resp.Distribution.AliasICPRecordals != nil {
			f0f3 := []*svcapitypes.AliasICPRecordal{}
			for _, f0f3iter := range resp.Distribution.AliasICPRecordals {
				f0f3elem := &svcapitypes.AliasICPRecordal{}
				if f0f3iter.CNAME != nil {
					f0f3elem.CNAME = f0f3iter.CNAME
				}
				if f0f3iter.ICPRecordalStatus != nil {
					f0f3elem.ICPRecordalStatus = f0f3iter.ICPRecordalStatus
				}
				f0f3 = append(f0f3, f0f3elem)
			}
			f0.AliasICPRecordals = f0f3
		}
		if resp.Distribution.DistributionConfig != nil {
			f0f4 := &svcapitypes.DistributionConfig{}
			if resp.Distribution.DistributionConfig.Aliases != nil {
				f0f4f0 := &svcapitypes.Aliases{}
				if resp.Distribution.DistributionConfig.Aliases.Items != nil {
					f0f4f0f0 := []*string{}
					for _, f0f4f0f0iter := range resp.Distribution.DistributionConfig.Aliases.Items {
						var f0f4f0f0elem string
						f0f4f0f0elem = *f0f4f0f0iter
						f0f4f0f0 = append(f0f4f0f0, &f0f4f0f0elem)
					}
					f0f4f0.Items = f0f4f0f0
				}
				f0f4.Aliases = f0f4f0
			}
			if resp.Distribution.DistributionConfig.CacheBehaviors != nil {
				f0f4f1 := &svcapitypes.CacheBehaviors{}
				if resp.Distribution.DistributionConfig.CacheBehaviors.Items != nil {
					f0f4f1f0 := []*svcapitypes.CacheBehavior{}
					for _, f0f4f1f0iter := range resp.Distribution.DistributionConfig.CacheBehaviors.Items {
						f0f4f1f0elem := &svcapitypes.CacheBehavior{}
						if f0f4f1f0iter.AllowedMethods != nil {
							f0f4f1f0elemf0 := &svcapitypes.AllowedMethods{}
							if f0f4f1f0iter.AllowedMethods.CachedMethods != nil {
								f0f4f1f0elemf0f0 := &svcapitypes.CachedMethods{}
								if f0f4f1f0iter.AllowedMethods.CachedMethods.Items != nil {
									f0f4f1f0elemf0f0f0 := []*string{}
									for _, f0f4f1f0elemf0f0f0iter := range f0f4f1f0iter.AllowedMethods.CachedMethods.Items {
										var f0f4f1f0elemf0f0f0elem string
										f0f4f1f0elemf0f0f0elem = *f0f4f1f0elemf0f0f0iter
										f0f4f1f0elemf0f0f0 = append(f0f4f1f0elemf0f0f0, &f0f4f1f0elemf0f0f0elem)
									}
									f0f4f1f0elemf0f0.Items = f0f4f1f0elemf0f0f0
								}
								f0f4f1f0elemf0.CachedMethods = f0f4f1f0elemf0f0
							}
							if f0f4f1f0iter.AllowedMethods.Items != nil {
								f0f4f1f0elemf0f1 := []*string{}
								for _, f0f4f1f0elemf0f1iter := range f0f4f1f0iter.AllowedMethods.Items {
									var f0f4f1f0elemf0f1elem string
									f0f4f1f0elemf0f1elem = *f0f4f1f0elemf0f1iter
									f0f4f1f0elemf0f1 = append(f0f4f1f0elemf0f1, &f0f4f1f0elemf0f1elem)
								}
								f0f4f1f0elemf0.Items = f0f4f1f0elemf0f1
							}
							f0f4f1f0elem.AllowedMethods = f0f4f1f0elemf0
						}
						if f0f4f1f0iter.CachePolicyId != nil {
							f0f4f1f0elem.CachePolicyID = f0f4f1f0iter.CachePolicyId
						}
						if f0f4f1f0iter.Compress != nil {
							f0f4f1f0elem.Compress = f0f4f1f0iter.Compress
						}
						if f0f4f1f0iter.DefaultTTL != nil {
							f0f4f1f0elem.DefaultTTL = f0f4f1f0iter.DefaultTTL
						}
						if f0f4f1f0iter.FieldLevelEncryptionId != nil {
							f0f4f1f0elem.FieldLevelEncryptionID = f0f4f1f0iter.FieldLevelEncryptionId
						}
						if f0f4f1f0iter.ForwardedValues != nil {
							f0f4f1f0elemf5 := &svcapitypes.ForwardedValues{}
							if f0f4f1f0iter.ForwardedValues.Cookies != nil {
								f0f4f1f0elemf5f0 := &svcapitypes.CookiePreference{}
								if f0f4f1f0iter.ForwardedValues.Cookies.Forward != nil {
									f0f4f1f0elemf5f0.Forward = f0f4f1f0iter.ForwardedValues.Cookies.Forward
								}
								if f0f4f1f0iter.ForwardedValues.Cookies.WhitelistedNames != nil {
									f0f4f1f0elemf5f0f1 := &svcapitypes.CookieNames{}
									if f0f4f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Items != nil {
										f0f4f1f0elemf5f0f1f0 := []*string{}
										for _, f0f4f1f0elemf5f0f1f0iter := range f0f4f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Items {
											var f0f4f1f0elemf5f0f1f0elem string
											f0f4f1f0elemf5f0f1f0elem = *f0f4f1f0elemf5f0f1f0iter
											f0f4f1f0elemf5f0f1f0 = append(f0f4f1f0elemf5f0f1f0, &f0f4f1f0elemf5f0f1f0elem)
										}
										f0f4f1f0elemf5f0f1.Items = f0f4f1f0elemf5f0f1f0
									}
									if f0f4f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Quantity != nil {
										f0f4f1f0elemf5f0f1.Quantity = f0f4f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Quantity
									}
									f0f4f1f0elemf5f0.WhitelistedNames = f0f4f1f0elemf5f0f1
								}
								f0f4f1f0elemf5.Cookies = f0f4f1f0elemf5f0
							}
							if f0f4f1f0iter.ForwardedValues.Headers != nil {
								f0f4f1f0elemf5f1 := &svcapitypes.Headers{}
								if f0f4f1f0iter.ForwardedValues.Headers.Items != nil {
									f0f4f1f0elemf5f1f0 := []*string{}
									for _, f0f4f1f0elemf5f1f0iter := range f0f4f1f0iter.ForwardedValues.Headers.Items {
										var f0f4f1f0elemf5f1f0elem string
										f0f4f1f0elemf5f1f0elem = *f0f4f1f0elemf5f1f0iter
										f0f4f1f0elemf5f1f0 = append(f0f4f1f0elemf5f1f0, &f0f4f1f0elemf5f1f0elem)
									}
									f0f4f1f0elemf5f1.Items = f0f4f1f0elemf5f1f0
								}
								f0f4f1f0elemf5.Headers = f0f4f1f0elemf5f1
							}
							if f0f4f1f0iter.ForwardedValues.QueryString != nil {
								f0f4f1f0elemf5.QueryString = f0f4f1f0iter.ForwardedValues.QueryString
							}
							if f0f4f1f0iter.ForwardedValues.QueryStringCacheKeys != nil {
								f0f4f1f0elemf5f3 := &svcapitypes.QueryStringCacheKeys{}
								if f0f4f1f0iter.ForwardedValues.QueryStringCacheKeys.Items != nil {
									f0f4f1f0elemf5f3f0 := []*string{}
									for _, f0f4f1f0elemf5f3f0iter := range f0f4f1f0iter.ForwardedValues.QueryStringCacheKeys.Items {
										var f0f4f1f0elemf5f3f0elem string
										f0f4f1f0elemf5f3f0elem = *f0f4f1f0elemf5f3f0iter
										f0f4f1f0elemf5f3f0 = append(f0f4f1f0elemf5f3f0, &f0f4f1f0elemf5f3f0elem)
									}
									f0f4f1f0elemf5f3.Items = f0f4f1f0elemf5f3f0
								}
								f0f4f1f0elemf5.QueryStringCacheKeys = f0f4f1f0elemf5f3
							}
							f0f4f1f0elem.ForwardedValues = f0f4f1f0elemf5
						}
						if f0f4f1f0iter.FunctionAssociations != nil {
							f0f4f1f0elemf6 := &svcapitypes.FunctionAssociations{}
							if f0f4f1f0iter.FunctionAssociations.Items != nil {
								f0f4f1f0elemf6f0 := []*svcapitypes.FunctionAssociation{}
								for _, f0f4f1f0elemf6f0iter := range f0f4f1f0iter.FunctionAssociations.Items {
									f0f4f1f0elemf6f0elem := &svcapitypes.FunctionAssociation{}
									if f0f4f1f0elemf6f0iter.EventType != nil {
										f0f4f1f0elemf6f0elem.EventType = f0f4f1f0elemf6f0iter.EventType
									}
									if f0f4f1f0elemf6f0iter.FunctionARN != nil {
										f0f4f1f0elemf6f0elem.FunctionARN = f0f4f1f0elemf6f0iter.FunctionARN
									}
									f0f4f1f0elemf6f0 = append(f0f4f1f0elemf6f0, f0f4f1f0elemf6f0elem)
								}
								f0f4f1f0elemf6.Items = f0f4f1f0elemf6f0
							}
							f0f4f1f0elem.FunctionAssociations = f0f4f1f0elemf6
						}
						if f0f4f1f0iter.LambdaFunctionAssociations != nil {
							f0f4f1f0elemf7 := &svcapitypes.LambdaFunctionAssociations{}
							if f0f4f1f0iter.LambdaFunctionAssociations.Items != nil {
								f0f4f1f0elemf7f0 := []*svcapitypes.LambdaFunctionAssociation{}
								for _, f0f4f1f0elemf7f0iter := range f0f4f1f0iter.LambdaFunctionAssociations.Items {
									f0f4f1f0elemf7f0elem := &svcapitypes.LambdaFunctionAssociation{}
									if f0f4f1f0elemf7f0iter.EventType != nil {
										f0f4f1f0elemf7f0elem.EventType = f0f4f1f0elemf7f0iter.EventType
									}
									if f0f4f1f0elemf7f0iter.IncludeBody != nil {
										f0f4f1f0elemf7f0elem.IncludeBody = f0f4f1f0elemf7f0iter.IncludeBody
									}
									if f0f4f1f0elemf7f0iter.LambdaFunctionARN != nil {
										f0f4f1f0elemf7f0elem.LambdaFunctionARN = f0f4f1f0elemf7f0iter.LambdaFunctionARN
									}
									f0f4f1f0elemf7f0 = append(f0f4f1f0elemf7f0, f0f4f1f0elemf7f0elem)
								}
								f0f4f1f0elemf7.Items = f0f4f1f0elemf7f0
							}
							f0f4f1f0elem.LambdaFunctionAssociations = f0f4f1f0elemf7
						}
						if f0f4f1f0iter.MaxTTL != nil {
							f0f4f1f0elem.MaxTTL = f0f4f1f0iter.MaxTTL
						}
						if f0f4f1f0iter.MinTTL != nil {
							f0f4f1f0elem.MinTTL = f0f4f1f0iter.MinTTL
						}
						if f0f4f1f0iter.OriginRequestPolicyId != nil {
							f0f4f1f0elem.OriginRequestPolicyID = f0f4f1f0iter.OriginRequestPolicyId
						}
						if f0f4f1f0iter.PathPattern != nil {
							f0f4f1f0elem.PathPattern = f0f4f1f0iter.PathPattern
						}
						if f0f4f1f0iter.RealtimeLogConfigArn != nil {
							f0f4f1f0elem.RealtimeLogConfigARN = f0f4f1f0iter.RealtimeLogConfigArn
						}
						if f0f4f1f0iter.ResponseHeadersPolicyId != nil {
							f0f4f1f0elem.ResponseHeadersPolicyID = f0f4f1f0iter.ResponseHeadersPolicyId
						}
						if f0f4f1f0iter.SmoothStreaming != nil {
							f0f4f1f0elem.SmoothStreaming = f0f4f1f0iter.SmoothStreaming
						}
						if f0f4f1f0iter.TargetOriginId != nil {
							f0f4f1f0elem.TargetOriginID = f0f4f1f0iter.TargetOriginId
						}
						if f0f4f1f0iter.TrustedKeyGroups != nil {
							f0f4f1f0elemf16 := &svcapitypes.TrustedKeyGroups{}
							if f0f4f1f0iter.TrustedKeyGroups.Enabled != nil {
								f0f4f1f0elemf16.Enabled = f0f4f1f0iter.TrustedKeyGroups.Enabled
							}
							if f0f4f1f0iter.TrustedKeyGroups.Items != nil {
								f0f4f1f0elemf16f1 := []*string{}
								for _, f0f4f1f0elemf16f1iter := range f0f4f1f0iter.TrustedKeyGroups.Items {
									var f0f4f1f0elemf16f1elem string
									f0f4f1f0elemf16f1elem = *f0f4f1f0elemf16f1iter
									f0f4f1f0elemf16f1 = append(f0f4f1f0elemf16f1, &f0f4f1f0elemf16f1elem)
								}
								f0f4f1f0elemf16.Items = f0f4f1f0elemf16f1
							}
							f0f4f1f0elem.TrustedKeyGroups = f0f4f1f0elemf16
						}
						if f0f4f1f0iter.TrustedSigners != nil {
							f0f4f1f0elemf17 := &svcapitypes.TrustedSigners{}
							if f0f4f1f0iter.TrustedSigners.Enabled != nil {
								f0f4f1f0elemf17.Enabled = f0f4f1f0iter.TrustedSigners.Enabled
							}
							if f0f4f1f0iter.TrustedSigners.Items != nil {
								f0f4f1f0elemf17f1 := []*string{}
								for _, f0f4f1f0elemf17f1iter := range f0f4f1f0iter.TrustedSigners.Items {
									var f0f4f1f0elemf17f1elem string
									f0f4f1f0elemf17f1elem = *f0f4f1f0elemf17f1iter
									f0f4f1f0elemf17f1 = append(f0f4f1f0elemf17f1, &f0f4f1f0elemf17f1elem)
								}
								f0f4f1f0elemf17.Items = f0f4f1f0elemf17f1
							}
							f0f4f1f0elem.TrustedSigners = f0f4f1f0elemf17
						}
						if f0f4f1f0iter.ViewerProtocolPolicy != nil {
							f0f4f1f0elem.ViewerProtocolPolicy = f0f4f1f0iter.ViewerProtocolPolicy
						}
						f0f4f1f0 = append(f0f4f1f0, f0f4f1f0elem)
					}
					f0f4f1.Items = f0f4f1f0
				}
				f0f4.CacheBehaviors = f0f4f1
			}
			if resp.Distribution.DistributionConfig.CallerReference != nil {
				f0f4.CallerReference = resp.Distribution.DistributionConfig.CallerReference
			}
			if resp.Distribution.DistributionConfig.Comment != nil {
				f0f4.Comment = resp.Distribution.DistributionConfig.Comment
			}
			if resp.Distribution.DistributionConfig.ContinuousDeploymentPolicyId != nil {
				f0f4.ContinuousDeploymentPolicyID = resp.Distribution.DistributionConfig.ContinuousDeploymentPolicyId
			}
			if resp.Distribution.DistributionConfig.CustomErrorResponses != nil {
				f0f4f5 := &svcapitypes.CustomErrorResponses{}
				if resp.Distribution.DistributionConfig.CustomErrorResponses.Items != nil {
					f0f4f5f0 := []*svcapitypes.CustomErrorResponse{}
					for _, f0f4f5f0iter := range resp.Distribution.DistributionConfig.CustomErrorResponses.Items {
						f0f4f5f0elem := &svcapitypes.CustomErrorResponse{}
						if f0f4f5f0iter.ErrorCachingMinTTL != nil {
							f0f4f5f0elem.ErrorCachingMinTTL = f0f4f5f0iter.ErrorCachingMinTTL
						}
						if f0f4f5f0iter.ErrorCode != nil {
							f0f4f5f0elem.ErrorCode = f0f4f5f0iter.ErrorCode
						}
						if f0f4f5f0iter.ResponseCode != nil {
							f0f4f5f0elem.ResponseCode = f0f4f5f0iter.ResponseCode
						}
						if f0f4f5f0iter.ResponsePagePath != nil {
							f0f4f5f0elem.ResponsePagePath = f0f4f5f0iter.ResponsePagePath
						}
						f0f4f5f0 = append(f0f4f5f0, f0f4f5f0elem)
					}
					f0f4f5.Items = f0f4f5f0
				}
				f0f4.CustomErrorResponses = f0f4f5
			}
			if resp.Distribution.DistributionConfig.DefaultCacheBehavior != nil {
				f0f4f6 := &svcapitypes.DefaultCacheBehavior{}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods != nil {
					f0f4f6f0 := &svcapitypes.AllowedMethods{}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods != nil {
						f0f4f6f0f0 := &svcapitypes.CachedMethods{}
						if resp.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items != nil {
							f0f4f6f0f0f0 := []*string{}
							for _, f0f4f6f0f0f0iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items {
								var f0f4f6f0f0f0elem string
								f0f4f6f0f0f0elem = *f0f4f6f0f0f0iter
								f0f4f6f0f0f0 = append(f0f4f6f0f0f0, &f0f4f6f0f0f0elem)
							}
							f0f4f6f0f0.Items = f0f4f6f0f0f0
						}
						f0f4f6f0.CachedMethods = f0f4f6f0f0
					}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items != nil {
						f0f4f6f0f1 := []*string{}
						for _, f0f4f6f0f1iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items {
							var f0f4f6f0f1elem string
							f0f4f6f0f1elem = *f0f4f6f0f1iter
							f0f4f6f0f1 = append(f0f4f6f0f1, &f0f4f6f0f1elem)
						}
						f0f4f6f0.Items = f0f4f6f0f1
					}
					f0f4f6.AllowedMethods = f0f4f6f0
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId != nil {
					f0f4f6.CachePolicyID = resp.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.Compress != nil {
					f0f4f6.Compress = resp.Distribution.DistributionConfig.DefaultCacheBehavior.Compress
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL != nil {
					f0f4f6.DefaultTTL = resp.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId != nil {
					f0f4f6.FieldLevelEncryptionID = resp.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues != nil {
					f0f4f6f5 := &svcapitypes.ForwardedValues{}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies != nil {
						f0f4f6f5f0 := &svcapitypes.CookiePreference{}
						if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward != nil {
							f0f4f6f5f0.Forward = resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward
						}
						if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames != nil {
							f0f4f6f5f0f1 := &svcapitypes.CookieNames{}
							if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items != nil {
								f0f4f6f5f0f1f0 := []*string{}
								for _, f0f4f6f5f0f1f0iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items {
									var f0f4f6f5f0f1f0elem string
									f0f4f6f5f0f1f0elem = *f0f4f6f5f0f1f0iter
									f0f4f6f5f0f1f0 = append(f0f4f6f5f0f1f0, &f0f4f6f5f0f1f0elem)
								}
								f0f4f6f5f0f1.Items = f0f4f6f5f0f1f0
							}
							if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity != nil {
								f0f4f6f5f0f1.Quantity = resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity
							}
							f0f4f6f5f0.WhitelistedNames = f0f4f6f5f0f1
						}
						f0f4f6f5.Cookies = f0f4f6f5f0
					}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers != nil {
						f0f4f6f5f1 := &svcapitypes.Headers{}
						if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items != nil {
							f0f4f6f5f1f0 := []*string{}
							for _, f0f4f6f5f1f0iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items {
								var f0f4f6f5f1f0elem string
								f0f4f6f5f1f0elem = *f0f4f6f5f1f0iter
								f0f4f6f5f1f0 = append(f0f4f6f5f1f0, &f0f4f6f5f1f0elem)
							}
							f0f4f6f5f1.Items = f0f4f6f5f1f0
						}
						f0f4f6f5.Headers = f0f4f6f5f1
					}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString != nil {
						f0f4f6f5.QueryString = resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString
					}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys != nil {
						f0f4f6f5f3 := &svcapitypes.QueryStringCacheKeys{}
						if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items != nil {
							f0f4f6f5f3f0 := []*string{}
							for _, f0f4f6f5f3f0iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items {
								var f0f4f6f5f3f0elem string
								f0f4f6f5f3f0elem = *f0f4f6f5f3f0iter
								f0f4f6f5f3f0 = append(f0f4f6f5f3f0, &f0f4f6f5f3f0elem)
							}
							f0f4f6f5f3.Items = f0f4f6f5f3f0
						}
						f0f4f6f5.QueryStringCacheKeys = f0f4f6f5f3
					}
					f0f4f6.ForwardedValues = f0f4f6f5
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations != nil {
					f0f4f6f6 := &svcapitypes.FunctionAssociations{}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items != nil {
						f0f4f6f6f0 := []*svcapitypes.FunctionAssociation{}
						for _, f0f4f6f6f0iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items {
							f0f4f6f6f0elem := &svcapitypes.FunctionAssociation{}
							if f0f4f6f6f0iter.EventType != nil {
								f0f4f6f6f0elem.EventType = f0f4f6f6f0iter.EventType
							}
							if f0f4f6f6f0iter.FunctionARN != nil {
								f0f4f6f6f0elem.FunctionARN = f0f4f6f6f0iter.FunctionARN
							}
							f0f4f6f6f0 = append(f0f4f6f6f0, f0f4f6f6f0elem)
						}
						f0f4f6f6.Items = f0f4f6f6f0
					}
					f0f4f6.FunctionAssociations = f0f4f6f6
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations != nil {
					f0f4f6f7 := &svcapitypes.LambdaFunctionAssociations{}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items != nil {
						f0f4f6f7f0 := []*svcapitypes.LambdaFunctionAssociation{}
						for _, f0f4f6f7f0iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items {
							f0f4f6f7f0elem := &svcapitypes.LambdaFunctionAssociation{}
							if f0f4f6f7f0iter.EventType != nil {
								f0f4f6f7f0elem.EventType = f0f4f6f7f0iter.EventType
							}
							if f0f4f6f7f0iter.IncludeBody != nil {
								f0f4f6f7f0elem.IncludeBody = f0f4f6f7f0iter.IncludeBody
							}
							if f0f4f6f7f0iter.LambdaFunctionARN != nil {
								f0f4f6f7f0elem.LambdaFunctionARN = f0f4f6f7f0iter.LambdaFunctionARN
							}
							f0f4f6f7f0 = append(f0f4f6f7f0, f0f4f6f7f0elem)
						}
						f0f4f6f7.Items = f0f4f6f7f0
					}
					f0f4f6.LambdaFunctionAssociations = f0f4f6f7
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL != nil {
					f0f4f6.MaxTTL = resp.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL != nil {
					f0f4f6.MinTTL = resp.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId != nil {
					f0f4f6.OriginRequestPolicyID = resp.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn != nil {
					f0f4f6.RealtimeLogConfigARN = resp.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ResponseHeadersPolicyId != nil {
					f0f4f6.ResponseHeadersPolicyID = resp.Distribution.DistributionConfig.DefaultCacheBehavior.ResponseHeadersPolicyId
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming != nil {
					f0f4f6.SmoothStreaming = resp.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId != nil {
					f0f4f6.TargetOriginID = resp.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups != nil {
					f0f4f6f15 := &svcapitypes.TrustedKeyGroups{}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled != nil {
						f0f4f6f15.Enabled = resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled
					}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items != nil {
						f0f4f6f15f1 := []*string{}
						for _, f0f4f6f15f1iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items {
							var f0f4f6f15f1elem string
							f0f4f6f15f1elem = *f0f4f6f15f1iter
							f0f4f6f15f1 = append(f0f4f6f15f1, &f0f4f6f15f1elem)
						}
						f0f4f6f15.Items = f0f4f6f15f1
					}
					f0f4f6.TrustedKeyGroups = f0f4f6f15
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners != nil {
					f0f4f6f16 := &svcapitypes.TrustedSigners{}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled != nil {
						f0f4f6f16.Enabled = resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled
					}
					if resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items != nil {
						f0f4f6f16f1 := []*string{}
						for _, f0f4f6f16f1iter := range resp.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items {
							var f0f4f6f16f1elem string
							f0f4f6f16f1elem = *f0f4f6f16f1iter
							f0f4f6f16f1 = append(f0f4f6f16f1, &f0f4f6f16f1elem)
						}
						f0f4f6f16.Items = f0f4f6f16f1
					}
					f0f4f6.TrustedSigners = f0f4f6f16
				}
				if resp.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy != nil {
					f0f4f6.ViewerProtocolPolicy = resp.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy
				}
				f0f4.DefaultCacheBehavior = f0f4f6
			}
			if resp.Distribution.DistributionConfig.DefaultRootObject != nil {
				f0f4.DefaultRootObject = resp.Distribution.DistributionConfig.DefaultRootObject
			}
			if resp.Distribution.DistributionConfig.Enabled != nil {
				f0f4.Enabled = resp.Distribution.DistributionConfig.Enabled
			}
			if resp.Distribution.DistributionConfig.HttpVersion != nil {
				f0f4.HTTPVersion = resp.Distribution.DistributionConfig.HttpVersion
			}
			if resp.Distribution.DistributionConfig.IsIPV6Enabled != nil {
				f0f4.IsIPV6Enabled = resp.Distribution.DistributionConfig.IsIPV6Enabled
			}
			if resp.Distribution.DistributionConfig.Logging != nil {
				f0f4f11 := &svcapitypes.LoggingConfig{}
				if resp.Distribution.DistributionConfig.Logging.Bucket != nil {
					f0f4f11.Bucket = resp.Distribution.DistributionConfig.Logging.Bucket
				}
				if resp.Distribution.DistributionConfig.Logging.Enabled != nil {
					f0f4f11.Enabled = resp.Distribution.DistributionConfig.Logging.Enabled
				}
				if resp.Distribution.DistributionConfig.Logging.IncludeCookies != nil {
					f0f4f11.IncludeCookies = resp.Distribution.DistributionConfig.Logging.IncludeCookies
				}
				if resp.Distribution.DistributionConfig.Logging.Prefix != nil {
					f0f4f11.Prefix = resp.Distribution.DistributionConfig.Logging.Prefix
				}
				f0f4.Logging = f0f4f11
			}
			if resp.Distribution.DistributionConfig.OriginGroups != nil {
				f0f4f12 := &svcapitypes.OriginGroups{}
				if resp.Distribution.DistributionConfig.OriginGroups.Items != nil {
					f0f4f12f0 := []*svcapitypes.OriginGroup{}
					for _, f0f4f12f0iter := range resp.Distribution.DistributionConfig.OriginGroups.Items {
						f0f4f12f0elem := &svcapitypes.OriginGroup{}
						if f0f4f12f0iter.FailoverCriteria != nil {
							f0f4f12f0elemf0 := &svcapitypes.OriginGroupFailoverCriteria{}
							if f0f4f12f0iter.FailoverCriteria.StatusCodes != nil {
								f0f4f12f0elemf0f0 := &svcapitypes.StatusCodes{}
								if f0f4f12f0iter.FailoverCriteria.StatusCodes.Items != nil {
									f0f4f12f0elemf0f0f0 := []*int64{}
									for _, f0f4f12f0elemf0f0f0iter := range f0f4f12f0iter.FailoverCriteria.StatusCodes.Items {
										var f0f4f12f0elemf0f0f0elem int64
										f0f4f12f0elemf0f0f0elem = *f0f4f12f0elemf0f0f0iter
										f0f4f12f0elemf0f0f0 = append(f0f4f12f0elemf0f0f0, &f0f4f12f0elemf0f0f0elem)
									}
									f0f4f12f0elemf0f0.Items = f0f4f12f0elemf0f0f0
								}
								f0f4f12f0elemf0.StatusCodes = f0f4f12f0elemf0f0
							}
							f0f4f12f0elem.FailoverCriteria = f0f4f12f0elemf0
						}
						if f0f4f12f0iter.Id != nil {
							f0f4f12f0elem.ID = f0f4f12f0iter.Id
						}
						if f0f4f12f0iter.Members != nil {
							f0f4f12f0elemf2 := &svcapitypes.OriginGroupMembers{}
							if f0f4f12f0iter.Members.Items != nil {
								f0f4f12f0elemf2f0 := []*svcapitypes.OriginGroupMember{}
								for _, f0f4f12f0elemf2f0iter := range f0f4f12f0iter.Members.Items {
									f0f4f12f0elemf2f0elem := &svcapitypes.OriginGroupMember{}
									if f0f4f12f0elemf2f0iter.OriginId != nil {
										f0f4f12f0elemf2f0elem.OriginID = f0f4f12f0elemf2f0iter.OriginId
									}
									f0f4f12f0elemf2f0 = append(f0f4f12f0elemf2f0, f0f4f12f0elemf2f0elem)
								}
								f0f4f12f0elemf2.Items = f0f4f12f0elemf2f0
							}
							if f0f4f12f0iter.Members.Quantity != nil {
								f0f4f12f0elemf2.Quantity = f0f4f12f0iter.Members.Quantity
							}
							f0f4f12f0elem.Members = f0f4f12f0elemf2
						}
						f0f4f12f0 = append(f0f4f12f0, f0f4f12f0elem)
					}
					f0f4f12.Items = f0f4f12f0
				}
				f0f4.OriginGroups = f0f4f12
			}
			if resp.Distribution.DistributionConfig.Origins != nil {
				f0f4f13 := &svcapitypes.Origins{}
				if resp.Distribution.DistributionConfig.Origins.Items != nil {
					f0f4f13f0 := []*svcapitypes.Origin{}
					for _, f0f4f13f0iter := range resp.Distribution.DistributionConfig.Origins.Items {
						f0f4f13f0elem := &svcapitypes.Origin{}
						if f0f4f13f0iter.ConnectionAttempts != nil {
							f0f4f13f0elem.ConnectionAttempts = f0f4f13f0iter.ConnectionAttempts
						}
						if f0f4f13f0iter.ConnectionTimeout != nil {
							f0f4f13f0elem.ConnectionTimeout = f0f4f13f0iter.ConnectionTimeout
						}
						if f0f4f13f0iter.CustomHeaders != nil {
							f0f4f13f0elemf2 := &svcapitypes.CustomHeaders{}
							if f0f4f13f0iter.CustomHeaders.Items != nil {
								f0f4f13f0elemf2f0 := []*svcapitypes.OriginCustomHeader{}
								for _, f0f4f13f0elemf2f0iter := range f0f4f13f0iter.CustomHeaders.Items {
									f0f4f13f0elemf2f0elem := &svcapitypes.OriginCustomHeader{}
									if f0f4f13f0elemf2f0iter.HeaderName != nil {
										f0f4f13f0elemf2f0elem.HeaderName = f0f4f13f0elemf2f0iter.HeaderName
									}
									if f0f4f13f0elemf2f0iter.HeaderValue != nil {
										f0f4f13f0elemf2f0elem.HeaderValue = f0f4f13f0elemf2f0iter.HeaderValue
									}
									f0f4f13f0elemf2f0 = append(f0f4f13f0elemf2f0, f0f4f13f0elemf2f0elem)
								}
								f0f4f13f0elemf2.Items = f0f4f13f0elemf2f0
							}
							f0f4f13f0elem.CustomHeaders = f0f4f13f0elemf2
						}
						if f0f4f13f0iter.CustomOriginConfig != nil {
							f0f4f13f0elemf3 := &svcapitypes.CustomOriginConfig{}
							if f0f4f13f0iter.CustomOriginConfig.HTTPPort != nil {
								f0f4f13f0elemf3.HTTPPort = f0f4f13f0iter.CustomOriginConfig.HTTPPort
							}
							if f0f4f13f0iter.CustomOriginConfig.HTTPSPort != nil {
								f0f4f13f0elemf3.HTTPSPort = f0f4f13f0iter.CustomOriginConfig.HTTPSPort
							}
							if f0f4f13f0iter.CustomOriginConfig.OriginKeepaliveTimeout != nil {
								f0f4f13f0elemf3.OriginKeepaliveTimeout = f0f4f13f0iter.CustomOriginConfig.OriginKeepaliveTimeout
							}
							if f0f4f13f0iter.CustomOriginConfig.OriginProtocolPolicy != nil {
								f0f4f13f0elemf3.OriginProtocolPolicy = f0f4f13f0iter.CustomOriginConfig.OriginProtocolPolicy
							}
							if f0f4f13f0iter.CustomOriginConfig.OriginReadTimeout != nil {
								f0f4f13f0elemf3.OriginReadTimeout = f0f4f13f0iter.CustomOriginConfig.OriginReadTimeout
							}
							if f0f4f13f0iter.CustomOriginConfig.OriginSslProtocols != nil {
								f0f4f13f0elemf3f5 := &svcapitypes.OriginSSLProtocols{}
								if f0f4f13f0iter.CustomOriginConfig.OriginSslProtocols.Items != nil {
									f0f4f13f0elemf3f5f0 := []*string{}
									for _, f0f4f13f0elemf3f5f0iter := range f0f4f13f0iter.CustomOriginConfig.OriginSslProtocols.Items {
										var f0f4f13f0elemf3f5f0elem string
										f0f4f13f0elemf3f5f0elem = *f0f4f13f0elemf3f5f0iter
										f0f4f13f0elemf3f5f0 = append(f0f4f13f0elemf3f5f0, &f0f4f13f0elemf3f5f0elem)
									}
									f0f4f13f0elemf3f5.Items = f0f4f13f0elemf3f5f0
								}
								f0f4f13f0elemf3.OriginSSLProtocols = f0f4f13f0elemf3f5
							}
							f0f4f13f0elem.CustomOriginConfig = f0f4f13f0elemf3
						}
						if f0f4f13f0iter.DomainName != nil {
							f0f4f13f0elem.DomainName = f0f4f13f0iter.DomainName
						}
						if f0f4f13f0iter.Id != nil {
							f0f4f13f0elem.ID = f0f4f13f0iter.Id
						}
						if f0f4f13f0iter.OriginAccessControlId != nil {
							f0f4f13f0elem.OriginAccessControlID = f0f4f13f0iter.OriginAccessControlId
						}
						if f0f4f13f0iter.OriginPath != nil {
							f0f4f13f0elem.OriginPath = f0f4f13f0iter.OriginPath
						}
						if f0f4f13f0iter.OriginShield != nil {
							f0f4f13f0elemf8 := &svcapitypes.OriginShield{}
							if f0f4f13f0iter.OriginShield.Enabled != nil {
								f0f4f13f0elemf8.Enabled = f0f4f13f0iter.OriginShield.Enabled
							}
							if f0f4f13f0iter.OriginShield.OriginShieldRegion != nil {
								f0f4f13f0elemf8.OriginShieldRegion = f0f4f13f0iter.OriginShield.OriginShieldRegion
							}
							f0f4f13f0elem.OriginShield = f0f4f13f0elemf8
						}
						if f0f4f13f0iter.S3OriginConfig != nil {
							f0f4f13f0elemf9 := &svcapitypes.S3OriginConfig{}
							if f0f4f13f0iter.S3OriginConfig.OriginAccessIdentity != nil {
								f0f4f13f0elemf9.OriginAccessIdentity = f0f4f13f0iter.S3OriginConfig.OriginAccessIdentity
							}
							f0f4f13f0elem.S3OriginConfig = f0f4f13f0elemf9
						}
						f0f4f13f0 = append(f0f4f13f0, f0f4f13f0elem)
					}
					f0f4f13.Items = f0f4f13f0
				}
				f0f4.Origins = f0f4f13
			}
			if resp.Distribution.DistributionConfig.PriceClass != nil {
				f0f4.PriceClass = resp.Distribution.DistributionConfig.PriceClass
			}
			if resp.Distribution.DistributionConfig.Restrictions != nil {
				f0f4f15 := &svcapitypes.Restrictions{}
				if resp.Distribution.DistributionConfig.Restrictions.GeoRestriction != nil {
					f0f4f15f0 := &svcapitypes.GeoRestriction{}
					if resp.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items != nil {
						f0f4f15f0f0 := []*string{}
						for _, f0f4f15f0f0iter := range resp.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items {
							var f0f4f15f0f0elem string
							f0f4f15f0f0elem = *f0f4f15f0f0iter
							f0f4f15f0f0 = append(f0f4f15f0f0, &f0f4f15f0f0elem)
						}
						f0f4f15f0.Items = f0f4f15f0f0
					}
					if resp.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType != nil {
						f0f4f15f0.RestrictionType = resp.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType
					}
					f0f4f15.GeoRestriction = f0f4f15f0
				}
				f0f4.Restrictions = f0f4f15
			}
			if resp.Distribution.DistributionConfig.Staging != nil {
				f0f4.Staging = resp.Distribution.DistributionConfig.Staging
			}
			if resp.Distribution.DistributionConfig.ViewerCertificate != nil {
				f0f4f17 := &svcapitypes.ViewerCertificate{}
				if resp.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn != nil {
					f0f4f17.ACMCertificateARN = resp.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn
				}
				if resp.Distribution.DistributionConfig.ViewerCertificate.Certificate != nil {
					f0f4f17.Certificate = resp.Distribution.DistributionConfig.ViewerCertificate.Certificate
				}
				if resp.Distribution.DistributionConfig.ViewerCertificate.CertificateSource != nil {
					f0f4f17.CertificateSource = resp.Distribution.DistributionConfig.ViewerCertificate.CertificateSource
				}
				if resp.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate != nil {
					f0f4f17.CloudFrontDefaultCertificate = resp.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate
				}
				if resp.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId != nil {
					f0f4f17.IAMCertificateID = resp.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId
				}
				if resp.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion != nil {
					f0f4f17.MinimumProtocolVersion = resp.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion
				}
				if resp.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod != nil {
					f0f4f17.SSLSupportMethod = resp.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod
				}
				f0f4.ViewerCertificate = f0f4f17
			}
			if resp.Distribution.DistributionConfig.WebACLId != nil {
				f0f4.WebACLID = resp.Distribution.DistributionConfig.WebACLId
			}
			f0.DistributionConfig = f0f4
		}
		if resp.Distribution.DomainName != nil {
			f0.DomainName = resp.Distribution.DomainName
		}
		if resp.Distribution.Id != nil {
			f0.ID = resp.Distribution.Id
		}
		if resp.Distribution.InProgressInvalidationBatches != nil {
			f0.InProgressInvalidationBatches = resp.Distribution.InProgressInvalidationBatches
		}
		if resp.Distribution.LastModifiedTime != nil {
			f0.LastModifiedTime = &metav1.Time{*resp.Distribution.LastModifiedTime}
		}
		if resp.Distribution.Status != nil {
			f0.Status = resp.Distribution.Status
		}
		cr.Status.AtProvider.Distribution = f0
	} else {
		cr.Status.AtProvider.Distribution = nil
	}
	if resp.ETag != nil {
		cr.Status.AtProvider.ETag = resp.ETag
	} else {
		cr.Status.AtProvider.ETag = nil
	}

	return cr
}

// GenerateCreateDistributionInput returns a create input.
func GenerateCreateDistributionInput(cr *svcapitypes.Distribution) *svcsdk.CreateDistributionInput {
	res := &svcsdk.CreateDistributionInput{}

	if cr.Spec.ForProvider.DistributionConfig != nil {
		f0 := &svcsdk.DistributionConfig{}
		if cr.Spec.ForProvider.DistributionConfig.Aliases != nil {
			f0f0 := &svcsdk.Aliases{}
			if cr.Spec.ForProvider.DistributionConfig.Aliases.Items != nil {
				f0f0f0 := []*string{}
				for _, f0f0f0iter := range cr.Spec.ForProvider.DistributionConfig.Aliases.Items {
					var f0f0f0elem string
					f0f0f0elem = *f0f0f0iter
					f0f0f0 = append(f0f0f0, &f0f0f0elem)
				}
				f0f0.SetItems(f0f0f0)
			}
			f0.SetAliases(f0f0)
		}
		if cr.Spec.ForProvider.DistributionConfig.CacheBehaviors != nil {
			f0f1 := &svcsdk.CacheBehaviors{}
			if cr.Spec.ForProvider.DistributionConfig.CacheBehaviors.Items != nil {
				f0f1f0 := []*svcsdk.CacheBehavior{}
				for _, f0f1f0iter := range cr.Spec.ForProvider.DistributionConfig.CacheBehaviors.Items {
					f0f1f0elem := &svcsdk.CacheBehavior{}
					if f0f1f0iter.AllowedMethods != nil {
						f0f1f0elemf0 := &svcsdk.AllowedMethods{}
						if f0f1f0iter.AllowedMethods.CachedMethods != nil {
							f0f1f0elemf0f0 := &svcsdk.CachedMethods{}
							if f0f1f0iter.AllowedMethods.CachedMethods.Items != nil {
								f0f1f0elemf0f0f0 := []*string{}
								for _, f0f1f0elemf0f0f0iter := range f0f1f0iter.AllowedMethods.CachedMethods.Items {
									var f0f1f0elemf0f0f0elem string
									f0f1f0elemf0f0f0elem = *f0f1f0elemf0f0f0iter
									f0f1f0elemf0f0f0 = append(f0f1f0elemf0f0f0, &f0f1f0elemf0f0f0elem)
								}
								f0f1f0elemf0f0.SetItems(f0f1f0elemf0f0f0)
							}
							f0f1f0elemf0.SetCachedMethods(f0f1f0elemf0f0)
						}
						if f0f1f0iter.AllowedMethods.Items != nil {
							f0f1f0elemf0f1 := []*string{}
							for _, f0f1f0elemf0f1iter := range f0f1f0iter.AllowedMethods.Items {
								var f0f1f0elemf0f1elem string
								f0f1f0elemf0f1elem = *f0f1f0elemf0f1iter
								f0f1f0elemf0f1 = append(f0f1f0elemf0f1, &f0f1f0elemf0f1elem)
							}
							f0f1f0elemf0.SetItems(f0f1f0elemf0f1)
						}
						f0f1f0elem.SetAllowedMethods(f0f1f0elemf0)
					}
					if f0f1f0iter.CachePolicyID != nil {
						f0f1f0elem.SetCachePolicyId(*f0f1f0iter.CachePolicyID)
					}
					if f0f1f0iter.Compress != nil {
						f0f1f0elem.SetCompress(*f0f1f0iter.Compress)
					}
					if f0f1f0iter.DefaultTTL != nil {
						f0f1f0elem.SetDefaultTTL(*f0f1f0iter.DefaultTTL)
					}
					if f0f1f0iter.FieldLevelEncryptionID != nil {
						f0f1f0elem.SetFieldLevelEncryptionId(*f0f1f0iter.FieldLevelEncryptionID)
					}
					if f0f1f0iter.ForwardedValues != nil {
						f0f1f0elemf5 := &svcsdk.ForwardedValues{}
						if f0f1f0iter.ForwardedValues.Cookies != nil {
							f0f1f0elemf5f0 := &svcsdk.CookiePreference{}
							if f0f1f0iter.ForwardedValues.Cookies.Forward != nil {
								f0f1f0elemf5f0.SetForward(*f0f1f0iter.ForwardedValues.Cookies.Forward)
							}
							if f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames != nil {
								f0f1f0elemf5f0f1 := &svcsdk.CookieNames{}
								if f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Items != nil {
									f0f1f0elemf5f0f1f0 := []*string{}
									for _, f0f1f0elemf5f0f1f0iter := range f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Items {
										var f0f1f0elemf5f0f1f0elem string
										f0f1f0elemf5f0f1f0elem = *f0f1f0elemf5f0f1f0iter
										f0f1f0elemf5f0f1f0 = append(f0f1f0elemf5f0f1f0, &f0f1f0elemf5f0f1f0elem)
									}
									f0f1f0elemf5f0f1.SetItems(f0f1f0elemf5f0f1f0)
								}
								if f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Quantity != nil {
									f0f1f0elemf5f0f1.SetQuantity(*f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Quantity)
								}
								f0f1f0elemf5f0.SetWhitelistedNames(f0f1f0elemf5f0f1)
							}
							f0f1f0elemf5.SetCookies(f0f1f0elemf5f0)
						}
						if f0f1f0iter.ForwardedValues.Headers != nil {
							f0f1f0elemf5f1 := &svcsdk.Headers{}
							if f0f1f0iter.ForwardedValues.Headers.Items != nil {
								f0f1f0elemf5f1f0 := []*string{}
								for _, f0f1f0elemf5f1f0iter := range f0f1f0iter.ForwardedValues.Headers.Items {
									var f0f1f0elemf5f1f0elem string
									f0f1f0elemf5f1f0elem = *f0f1f0elemf5f1f0iter
									f0f1f0elemf5f1f0 = append(f0f1f0elemf5f1f0, &f0f1f0elemf5f1f0elem)
								}
								f0f1f0elemf5f1.SetItems(f0f1f0elemf5f1f0)
							}
							f0f1f0elemf5.SetHeaders(f0f1f0elemf5f1)
						}
						if f0f1f0iter.ForwardedValues.QueryString != nil {
							f0f1f0elemf5.SetQueryString(*f0f1f0iter.ForwardedValues.QueryString)
						}
						if f0f1f0iter.ForwardedValues.QueryStringCacheKeys != nil {
							f0f1f0elemf5f3 := &svcsdk.QueryStringCacheKeys{}
							if f0f1f0iter.ForwardedValues.QueryStringCacheKeys.Items != nil {
								f0f1f0elemf5f3f0 := []*string{}
								for _, f0f1f0elemf5f3f0iter := range f0f1f0iter.ForwardedValues.QueryStringCacheKeys.Items {
									var f0f1f0elemf5f3f0elem string
									f0f1f0elemf5f3f0elem = *f0f1f0elemf5f3f0iter
									f0f1f0elemf5f3f0 = append(f0f1f0elemf5f3f0, &f0f1f0elemf5f3f0elem)
								}
								f0f1f0elemf5f3.SetItems(f0f1f0elemf5f3f0)
							}
							f0f1f0elemf5.SetQueryStringCacheKeys(f0f1f0elemf5f3)
						}
						f0f1f0elem.SetForwardedValues(f0f1f0elemf5)
					}
					if f0f1f0iter.FunctionAssociations != nil {
						f0f1f0elemf6 := &svcsdk.FunctionAssociations{}
						if f0f1f0iter.FunctionAssociations.Items != nil {
							f0f1f0elemf6f0 := []*svcsdk.FunctionAssociation{}
							for _, f0f1f0elemf6f0iter := range f0f1f0iter.FunctionAssociations.Items {
								f0f1f0elemf6f0elem := &svcsdk.FunctionAssociation{}
								if f0f1f0elemf6f0iter.EventType != nil {
									f0f1f0elemf6f0elem.SetEventType(*f0f1f0elemf6f0iter.EventType)
								}
								if f0f1f0elemf6f0iter.FunctionARN != nil {
									f0f1f0elemf6f0elem.SetFunctionARN(*f0f1f0elemf6f0iter.FunctionARN)
								}
								f0f1f0elemf6f0 = append(f0f1f0elemf6f0, f0f1f0elemf6f0elem)
							}
							f0f1f0elemf6.SetItems(f0f1f0elemf6f0)
						}
						f0f1f0elem.SetFunctionAssociations(f0f1f0elemf6)
					}
					if f0f1f0iter.LambdaFunctionAssociations != nil {
						f0f1f0elemf7 := &svcsdk.LambdaFunctionAssociations{}
						if f0f1f0iter.LambdaFunctionAssociations.Items != nil {
							f0f1f0elemf7f0 := []*svcsdk.LambdaFunctionAssociation{}
							for _, f0f1f0elemf7f0iter := range f0f1f0iter.LambdaFunctionAssociations.Items {
								f0f1f0elemf7f0elem := &svcsdk.LambdaFunctionAssociation{}
								if f0f1f0elemf7f0iter.EventType != nil {
									f0f1f0elemf7f0elem.SetEventType(*f0f1f0elemf7f0iter.EventType)
								}
								if f0f1f0elemf7f0iter.IncludeBody != nil {
									f0f1f0elemf7f0elem.SetIncludeBody(*f0f1f0elemf7f0iter.IncludeBody)
								}
								if f0f1f0elemf7f0iter.LambdaFunctionARN != nil {
									f0f1f0elemf7f0elem.SetLambdaFunctionARN(*f0f1f0elemf7f0iter.LambdaFunctionARN)
								}
								f0f1f0elemf7f0 = append(f0f1f0elemf7f0, f0f1f0elemf7f0elem)
							}
							f0f1f0elemf7.SetItems(f0f1f0elemf7f0)
						}
						f0f1f0elem.SetLambdaFunctionAssociations(f0f1f0elemf7)
					}
					if f0f1f0iter.MaxTTL != nil {
						f0f1f0elem.SetMaxTTL(*f0f1f0iter.MaxTTL)
					}
					if f0f1f0iter.MinTTL != nil {
						f0f1f0elem.SetMinTTL(*f0f1f0iter.MinTTL)
					}
					if f0f1f0iter.OriginRequestPolicyID != nil {
						f0f1f0elem.SetOriginRequestPolicyId(*f0f1f0iter.OriginRequestPolicyID)
					}
					if f0f1f0iter.PathPattern != nil {
						f0f1f0elem.SetPathPattern(*f0f1f0iter.PathPattern)
					}
					if f0f1f0iter.RealtimeLogConfigARN != nil {
						f0f1f0elem.SetRealtimeLogConfigArn(*f0f1f0iter.RealtimeLogConfigARN)
					}
					if f0f1f0iter.ResponseHeadersPolicyID != nil {
						f0f1f0elem.SetResponseHeadersPolicyId(*f0f1f0iter.ResponseHeadersPolicyID)
					}
					if f0f1f0iter.SmoothStreaming != nil {
						f0f1f0elem.SetSmoothStreaming(*f0f1f0iter.SmoothStreaming)
					}
					if f0f1f0iter.TargetOriginID != nil {
						f0f1f0elem.SetTargetOriginId(*f0f1f0iter.TargetOriginID)
					}
					if f0f1f0iter.TrustedKeyGroups != nil {
						f0f1f0elemf16 := &svcsdk.TrustedKeyGroups{}
						if f0f1f0iter.TrustedKeyGroups.Enabled != nil {
							f0f1f0elemf16.SetEnabled(*f0f1f0iter.TrustedKeyGroups.Enabled)
						}
						if f0f1f0iter.TrustedKeyGroups.Items != nil {
							f0f1f0elemf16f1 := []*string{}
							for _, f0f1f0elemf16f1iter := range f0f1f0iter.TrustedKeyGroups.Items {
								var f0f1f0elemf16f1elem string
								f0f1f0elemf16f1elem = *f0f1f0elemf16f1iter
								f0f1f0elemf16f1 = append(f0f1f0elemf16f1, &f0f1f0elemf16f1elem)
							}
							f0f1f0elemf16.SetItems(f0f1f0elemf16f1)
						}
						f0f1f0elem.SetTrustedKeyGroups(f0f1f0elemf16)
					}
					if f0f1f0iter.TrustedSigners != nil {
						f0f1f0elemf17 := &svcsdk.TrustedSigners{}
						if f0f1f0iter.TrustedSigners.Enabled != nil {
							f0f1f0elemf17.SetEnabled(*f0f1f0iter.TrustedSigners.Enabled)
						}
						if f0f1f0iter.TrustedSigners.Items != nil {
							f0f1f0elemf17f1 := []*string{}
							for _, f0f1f0elemf17f1iter := range f0f1f0iter.TrustedSigners.Items {
								var f0f1f0elemf17f1elem string
								f0f1f0elemf17f1elem = *f0f1f0elemf17f1iter
								f0f1f0elemf17f1 = append(f0f1f0elemf17f1, &f0f1f0elemf17f1elem)
							}
							f0f1f0elemf17.SetItems(f0f1f0elemf17f1)
						}
						f0f1f0elem.SetTrustedSigners(f0f1f0elemf17)
					}
					if f0f1f0iter.ViewerProtocolPolicy != nil {
						f0f1f0elem.SetViewerProtocolPolicy(*f0f1f0iter.ViewerProtocolPolicy)
					}
					f0f1f0 = append(f0f1f0, f0f1f0elem)
				}
				f0f1.SetItems(f0f1f0)
			}
			f0.SetCacheBehaviors(f0f1)
		}
		if cr.Spec.ForProvider.DistributionConfig.CallerReference != nil {
			f0.SetCallerReference(*cr.Spec.ForProvider.DistributionConfig.CallerReference)
		}
		if cr.Spec.ForProvider.DistributionConfig.Comment != nil {
			f0.SetComment(*cr.Spec.ForProvider.DistributionConfig.Comment)
		}
		if cr.Spec.ForProvider.DistributionConfig.ContinuousDeploymentPolicyID != nil {
			f0.SetContinuousDeploymentPolicyId(*cr.Spec.ForProvider.DistributionConfig.ContinuousDeploymentPolicyID)
		}
		if cr.Spec.ForProvider.DistributionConfig.CustomErrorResponses != nil {
			f0f5 := &svcsdk.CustomErrorResponses{}
			if cr.Spec.ForProvider.DistributionConfig.CustomErrorResponses.Items != nil {
				f0f5f0 := []*svcsdk.CustomErrorResponse{}
				for _, f0f5f0iter := range cr.Spec.ForProvider.DistributionConfig.CustomErrorResponses.Items {
					f0f5f0elem := &svcsdk.CustomErrorResponse{}
					if f0f5f0iter.ErrorCachingMinTTL != nil {
						f0f5f0elem.SetErrorCachingMinTTL(*f0f5f0iter.ErrorCachingMinTTL)
					}
					if f0f5f0iter.ErrorCode != nil {
						f0f5f0elem.SetErrorCode(*f0f5f0iter.ErrorCode)
					}
					if f0f5f0iter.ResponseCode != nil {
						f0f5f0elem.SetResponseCode(*f0f5f0iter.ResponseCode)
					}
					if f0f5f0iter.ResponsePagePath != nil {
						f0f5f0elem.SetResponsePagePath(*f0f5f0iter.ResponsePagePath)
					}
					f0f5f0 = append(f0f5f0, f0f5f0elem)
				}
				f0f5.SetItems(f0f5f0)
			}
			f0.SetCustomErrorResponses(f0f5)
		}
		if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior != nil {
			f0f6 := &svcsdk.DefaultCacheBehavior{}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods != nil {
				f0f6f0 := &svcsdk.AllowedMethods{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods != nil {
					f0f6f0f0 := &svcsdk.CachedMethods{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items != nil {
						f0f6f0f0f0 := []*string{}
						for _, f0f6f0f0f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items {
							var f0f6f0f0f0elem string
							f0f6f0f0f0elem = *f0f6f0f0f0iter
							f0f6f0f0f0 = append(f0f6f0f0f0, &f0f6f0f0f0elem)
						}
						f0f6f0f0.SetItems(f0f6f0f0f0)
					}
					f0f6f0.SetCachedMethods(f0f6f0f0)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items != nil {
					f0f6f0f1 := []*string{}
					for _, f0f6f0f1iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items {
						var f0f6f0f1elem string
						f0f6f0f1elem = *f0f6f0f1iter
						f0f6f0f1 = append(f0f6f0f1, &f0f6f0f1elem)
					}
					f0f6f0.SetItems(f0f6f0f1)
				}
				f0f6.SetAllowedMethods(f0f6f0)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.CachePolicyID != nil {
				f0f6.SetCachePolicyId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.CachePolicyID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.Compress != nil {
				f0f6.SetCompress(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.Compress)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.DefaultTTL != nil {
				f0f6.SetDefaultTTL(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.DefaultTTL)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionID != nil {
				f0f6.SetFieldLevelEncryptionId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues != nil {
				f0f6f5 := &svcsdk.ForwardedValues{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies != nil {
					f0f6f5f0 := &svcsdk.CookiePreference{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward != nil {
						f0f6f5f0.SetForward(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward)
					}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames != nil {
						f0f6f5f0f1 := &svcsdk.CookieNames{}
						if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items != nil {
							f0f6f5f0f1f0 := []*string{}
							for _, f0f6f5f0f1f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items {
								var f0f6f5f0f1f0elem string
								f0f6f5f0f1f0elem = *f0f6f5f0f1f0iter
								f0f6f5f0f1f0 = append(f0f6f5f0f1f0, &f0f6f5f0f1f0elem)
							}
							f0f6f5f0f1.SetItems(f0f6f5f0f1f0)
						}
						if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity != nil {
							f0f6f5f0f1.SetQuantity(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity)
						}
						f0f6f5f0.SetWhitelistedNames(f0f6f5f0f1)
					}
					f0f6f5.SetCookies(f0f6f5f0)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers != nil {
					f0f6f5f1 := &svcsdk.Headers{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items != nil {
						f0f6f5f1f0 := []*string{}
						for _, f0f6f5f1f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items {
							var f0f6f5f1f0elem string
							f0f6f5f1f0elem = *f0f6f5f1f0iter
							f0f6f5f1f0 = append(f0f6f5f1f0, &f0f6f5f1f0elem)
						}
						f0f6f5f1.SetItems(f0f6f5f1f0)
					}
					f0f6f5.SetHeaders(f0f6f5f1)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString != nil {
					f0f6f5.SetQueryString(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys != nil {
					f0f6f5f3 := &svcsdk.QueryStringCacheKeys{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items != nil {
						f0f6f5f3f0 := []*string{}
						for _, f0f6f5f3f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items {
							var f0f6f5f3f0elem string
							f0f6f5f3f0elem = *f0f6f5f3f0iter
							f0f6f5f3f0 = append(f0f6f5f3f0, &f0f6f5f3f0elem)
						}
						f0f6f5f3.SetItems(f0f6f5f3f0)
					}
					f0f6f5.SetQueryStringCacheKeys(f0f6f5f3)
				}
				f0f6.SetForwardedValues(f0f6f5)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FunctionAssociations != nil {
				f0f6f6 := &svcsdk.FunctionAssociations{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items != nil {
					f0f6f6f0 := []*svcsdk.FunctionAssociation{}
					for _, f0f6f6f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items {
						f0f6f6f0elem := &svcsdk.FunctionAssociation{}
						if f0f6f6f0iter.EventType != nil {
							f0f6f6f0elem.SetEventType(*f0f6f6f0iter.EventType)
						}
						if f0f6f6f0iter.FunctionARN != nil {
							f0f6f6f0elem.SetFunctionARN(*f0f6f6f0iter.FunctionARN)
						}
						f0f6f6f0 = append(f0f6f6f0, f0f6f6f0elem)
					}
					f0f6f6.SetItems(f0f6f6f0)
				}
				f0f6.SetFunctionAssociations(f0f6f6)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations != nil {
				f0f6f7 := &svcsdk.LambdaFunctionAssociations{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items != nil {
					f0f6f7f0 := []*svcsdk.LambdaFunctionAssociation{}
					for _, f0f6f7f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items {
						f0f6f7f0elem := &svcsdk.LambdaFunctionAssociation{}
						if f0f6f7f0iter.EventType != nil {
							f0f6f7f0elem.SetEventType(*f0f6f7f0iter.EventType)
						}
						if f0f6f7f0iter.IncludeBody != nil {
							f0f6f7f0elem.SetIncludeBody(*f0f6f7f0iter.IncludeBody)
						}
						if f0f6f7f0iter.LambdaFunctionARN != nil {
							f0f6f7f0elem.SetLambdaFunctionARN(*f0f6f7f0iter.LambdaFunctionARN)
						}
						f0f6f7f0 = append(f0f6f7f0, f0f6f7f0elem)
					}
					f0f6f7.SetItems(f0f6f7f0)
				}
				f0f6.SetLambdaFunctionAssociations(f0f6f7)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MaxTTL != nil {
				f0f6.SetMaxTTL(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MaxTTL)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MinTTL != nil {
				f0f6.SetMinTTL(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MinTTL)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyID != nil {
				f0f6.SetOriginRequestPolicyId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigARN != nil {
				f0f6.SetRealtimeLogConfigArn(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigARN)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ResponseHeadersPolicyID != nil {
				f0f6.SetResponseHeadersPolicyId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ResponseHeadersPolicyID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.SmoothStreaming != nil {
				f0f6.SetSmoothStreaming(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.SmoothStreaming)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TargetOriginID != nil {
				f0f6.SetTargetOriginId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TargetOriginID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups != nil {
				f0f6f15 := &svcsdk.TrustedKeyGroups{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled != nil {
					f0f6f15.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items != nil {
					f0f6f15f1 := []*string{}
					for _, f0f6f15f1iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items {
						var f0f6f15f1elem string
						f0f6f15f1elem = *f0f6f15f1iter
						f0f6f15f1 = append(f0f6f15f1, &f0f6f15f1elem)
					}
					f0f6f15.SetItems(f0f6f15f1)
				}
				f0f6.SetTrustedKeyGroups(f0f6f15)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners != nil {
				f0f6f16 := &svcsdk.TrustedSigners{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled != nil {
					f0f6f16.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items != nil {
					f0f6f16f1 := []*string{}
					for _, f0f6f16f1iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items {
						var f0f6f16f1elem string
						f0f6f16f1elem = *f0f6f16f1iter
						f0f6f16f1 = append(f0f6f16f1, &f0f6f16f1elem)
					}
					f0f6f16.SetItems(f0f6f16f1)
				}
				f0f6.SetTrustedSigners(f0f6f16)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy != nil {
				f0f6.SetViewerProtocolPolicy(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy)
			}
			f0.SetDefaultCacheBehavior(f0f6)
		}
		if cr.Spec.ForProvider.DistributionConfig.DefaultRootObject != nil {
			f0.SetDefaultRootObject(*cr.Spec.ForProvider.DistributionConfig.DefaultRootObject)
		}
		if cr.Spec.ForProvider.DistributionConfig.Enabled != nil {
			f0.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.Enabled)
		}
		if cr.Spec.ForProvider.DistributionConfig.HTTPVersion != nil {
			f0.SetHttpVersion(*cr.Spec.ForProvider.DistributionConfig.HTTPVersion)
		}
		if cr.Spec.ForProvider.DistributionConfig.IsIPV6Enabled != nil {
			f0.SetIsIPV6Enabled(*cr.Spec.ForProvider.DistributionConfig.IsIPV6Enabled)
		}
		if cr.Spec.ForProvider.DistributionConfig.Logging != nil {
			f0f11 := &svcsdk.LoggingConfig{}
			if cr.Spec.ForProvider.DistributionConfig.Logging.Bucket != nil {
				f0f11.SetBucket(*cr.Spec.ForProvider.DistributionConfig.Logging.Bucket)
			}
			if cr.Spec.ForProvider.DistributionConfig.Logging.Enabled != nil {
				f0f11.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.Logging.Enabled)
			}
			if cr.Spec.ForProvider.DistributionConfig.Logging.IncludeCookies != nil {
				f0f11.SetIncludeCookies(*cr.Spec.ForProvider.DistributionConfig.Logging.IncludeCookies)
			}
			if cr.Spec.ForProvider.DistributionConfig.Logging.Prefix != nil {
				f0f11.SetPrefix(*cr.Spec.ForProvider.DistributionConfig.Logging.Prefix)
			}
			f0.SetLogging(f0f11)
		}
		if cr.Spec.ForProvider.DistributionConfig.OriginGroups != nil {
			f0f12 := &svcsdk.OriginGroups{}
			if cr.Spec.ForProvider.DistributionConfig.OriginGroups.Items != nil {
				f0f12f0 := []*svcsdk.OriginGroup{}
				for _, f0f12f0iter := range cr.Spec.ForProvider.DistributionConfig.OriginGroups.Items {
					f0f12f0elem := &svcsdk.OriginGroup{}
					if f0f12f0iter.FailoverCriteria != nil {
						f0f12f0elemf0 := &svcsdk.OriginGroupFailoverCriteria{}
						if f0f12f0iter.FailoverCriteria.StatusCodes != nil {
							f0f12f0elemf0f0 := &svcsdk.StatusCodes{}
							if f0f12f0iter.FailoverCriteria.StatusCodes.Items != nil {
								f0f12f0elemf0f0f0 := []*int64{}
								for _, f0f12f0elemf0f0f0iter := range f0f12f0iter.FailoverCriteria.StatusCodes.Items {
									var f0f12f0elemf0f0f0elem int64
									f0f12f0elemf0f0f0elem = *f0f12f0elemf0f0f0iter
									f0f12f0elemf0f0f0 = append(f0f12f0elemf0f0f0, &f0f12f0elemf0f0f0elem)
								}
								f0f12f0elemf0f0.SetItems(f0f12f0elemf0f0f0)
							}
							f0f12f0elemf0.SetStatusCodes(f0f12f0elemf0f0)
						}
						f0f12f0elem.SetFailoverCriteria(f0f12f0elemf0)
					}
					if f0f12f0iter.ID != nil {
						f0f12f0elem.SetId(*f0f12f0iter.ID)
					}
					if f0f12f0iter.Members != nil {
						f0f12f0elemf2 := &svcsdk.OriginGroupMembers{}
						if f0f12f0iter.Members.Items != nil {
							f0f12f0elemf2f0 := []*svcsdk.OriginGroupMember{}
							for _, f0f12f0elemf2f0iter := range f0f12f0iter.Members.Items {
								f0f12f0elemf2f0elem := &svcsdk.OriginGroupMember{}
								if f0f12f0elemf2f0iter.OriginID != nil {
									f0f12f0elemf2f0elem.SetOriginId(*f0f12f0elemf2f0iter.OriginID)
								}
								f0f12f0elemf2f0 = append(f0f12f0elemf2f0, f0f12f0elemf2f0elem)
							}
							f0f12f0elemf2.SetItems(f0f12f0elemf2f0)
						}
						if f0f12f0iter.Members.Quantity != nil {
							f0f12f0elemf2.SetQuantity(*f0f12f0iter.Members.Quantity)
						}
						f0f12f0elem.SetMembers(f0f12f0elemf2)
					}
					f0f12f0 = append(f0f12f0, f0f12f0elem)
				}
				f0f12.SetItems(f0f12f0)
			}
			f0.SetOriginGroups(f0f12)
		}
		if cr.Spec.ForProvider.DistributionConfig.Origins != nil {
			f0f13 := &svcsdk.Origins{}
			if cr.Spec.ForProvider.DistributionConfig.Origins.Items != nil {
				f0f13f0 := []*svcsdk.Origin{}
				for _, f0f13f0iter := range cr.Spec.ForProvider.DistributionConfig.Origins.Items {
					f0f13f0elem := &svcsdk.Origin{}
					if f0f13f0iter.ConnectionAttempts != nil {
						f0f13f0elem.SetConnectionAttempts(*f0f13f0iter.ConnectionAttempts)
					}
					if f0f13f0iter.ConnectionTimeout != nil {
						f0f13f0elem.SetConnectionTimeout(*f0f13f0iter.ConnectionTimeout)
					}
					if f0f13f0iter.CustomHeaders != nil {
						f0f13f0elemf2 := &svcsdk.CustomHeaders{}
						if f0f13f0iter.CustomHeaders.Items != nil {
							f0f13f0elemf2f0 := []*svcsdk.OriginCustomHeader{}
							for _, f0f13f0elemf2f0iter := range f0f13f0iter.CustomHeaders.Items {
								f0f13f0elemf2f0elem := &svcsdk.OriginCustomHeader{}
								if f0f13f0elemf2f0iter.HeaderName != nil {
									f0f13f0elemf2f0elem.SetHeaderName(*f0f13f0elemf2f0iter.HeaderName)
								}
								if f0f13f0elemf2f0iter.HeaderValue != nil {
									f0f13f0elemf2f0elem.SetHeaderValue(*f0f13f0elemf2f0iter.HeaderValue)
								}
								f0f13f0elemf2f0 = append(f0f13f0elemf2f0, f0f13f0elemf2f0elem)
							}
							f0f13f0elemf2.SetItems(f0f13f0elemf2f0)
						}
						f0f13f0elem.SetCustomHeaders(f0f13f0elemf2)
					}
					if f0f13f0iter.CustomOriginConfig != nil {
						f0f13f0elemf3 := &svcsdk.CustomOriginConfig{}
						if f0f13f0iter.CustomOriginConfig.HTTPPort != nil {
							f0f13f0elemf3.SetHTTPPort(*f0f13f0iter.CustomOriginConfig.HTTPPort)
						}
						if f0f13f0iter.CustomOriginConfig.HTTPSPort != nil {
							f0f13f0elemf3.SetHTTPSPort(*f0f13f0iter.CustomOriginConfig.HTTPSPort)
						}
						if f0f13f0iter.CustomOriginConfig.OriginKeepaliveTimeout != nil {
							f0f13f0elemf3.SetOriginKeepaliveTimeout(*f0f13f0iter.CustomOriginConfig.OriginKeepaliveTimeout)
						}
						if f0f13f0iter.CustomOriginConfig.OriginProtocolPolicy != nil {
							f0f13f0elemf3.SetOriginProtocolPolicy(*f0f13f0iter.CustomOriginConfig.OriginProtocolPolicy)
						}
						if f0f13f0iter.CustomOriginConfig.OriginReadTimeout != nil {
							f0f13f0elemf3.SetOriginReadTimeout(*f0f13f0iter.CustomOriginConfig.OriginReadTimeout)
						}
						if f0f13f0iter.CustomOriginConfig.OriginSSLProtocols != nil {
							f0f13f0elemf3f5 := &svcsdk.OriginSslProtocols{}
							if f0f13f0iter.CustomOriginConfig.OriginSSLProtocols.Items != nil {
								f0f13f0elemf3f5f0 := []*string{}
								for _, f0f13f0elemf3f5f0iter := range f0f13f0iter.CustomOriginConfig.OriginSSLProtocols.Items {
									var f0f13f0elemf3f5f0elem string
									f0f13f0elemf3f5f0elem = *f0f13f0elemf3f5f0iter
									f0f13f0elemf3f5f0 = append(f0f13f0elemf3f5f0, &f0f13f0elemf3f5f0elem)
								}
								f0f13f0elemf3f5.SetItems(f0f13f0elemf3f5f0)
							}
							f0f13f0elemf3.SetOriginSslProtocols(f0f13f0elemf3f5)
						}
						f0f13f0elem.SetCustomOriginConfig(f0f13f0elemf3)
					}
					if f0f13f0iter.DomainName != nil {
						f0f13f0elem.SetDomainName(*f0f13f0iter.DomainName)
					}
					if f0f13f0iter.ID != nil {
						f0f13f0elem.SetId(*f0f13f0iter.ID)
					}
					if f0f13f0iter.OriginAccessControlID != nil {
						f0f13f0elem.SetOriginAccessControlId(*f0f13f0iter.OriginAccessControlID)
					}
					if f0f13f0iter.OriginPath != nil {
						f0f13f0elem.SetOriginPath(*f0f13f0iter.OriginPath)
					}
					if f0f13f0iter.OriginShield != nil {
						f0f13f0elemf8 := &svcsdk.OriginShield{}
						if f0f13f0iter.OriginShield.Enabled != nil {
							f0f13f0elemf8.SetEnabled(*f0f13f0iter.OriginShield.Enabled)
						}
						if f0f13f0iter.OriginShield.OriginShieldRegion != nil {
							f0f13f0elemf8.SetOriginShieldRegion(*f0f13f0iter.OriginShield.OriginShieldRegion)
						}
						f0f13f0elem.SetOriginShield(f0f13f0elemf8)
					}
					if f0f13f0iter.S3OriginConfig != nil {
						f0f13f0elemf9 := &svcsdk.S3OriginConfig{}
						if f0f13f0iter.S3OriginConfig.OriginAccessIdentity != nil {
							f0f13f0elemf9.SetOriginAccessIdentity(*f0f13f0iter.S3OriginConfig.OriginAccessIdentity)
						}
						f0f13f0elem.SetS3OriginConfig(f0f13f0elemf9)
					}
					f0f13f0 = append(f0f13f0, f0f13f0elem)
				}
				f0f13.SetItems(f0f13f0)
			}
			f0.SetOrigins(f0f13)
		}
		if cr.Spec.ForProvider.DistributionConfig.PriceClass != nil {
			f0.SetPriceClass(*cr.Spec.ForProvider.DistributionConfig.PriceClass)
		}
		if cr.Spec.ForProvider.DistributionConfig.Restrictions != nil {
			f0f15 := &svcsdk.Restrictions{}
			if cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction != nil {
				f0f15f0 := &svcsdk.GeoRestriction{}
				if cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.Items != nil {
					f0f15f0f0 := []*string{}
					for _, f0f15f0f0iter := range cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.Items {
						var f0f15f0f0elem string
						f0f15f0f0elem = *f0f15f0f0iter
						f0f15f0f0 = append(f0f15f0f0, &f0f15f0f0elem)
					}
					f0f15f0.SetItems(f0f15f0f0)
				}
				if cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.RestrictionType != nil {
					f0f15f0.SetRestrictionType(*cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.RestrictionType)
				}
				f0f15.SetGeoRestriction(f0f15f0)
			}
			f0.SetRestrictions(f0f15)
		}
		if cr.Spec.ForProvider.DistributionConfig.Staging != nil {
			f0.SetStaging(*cr.Spec.ForProvider.DistributionConfig.Staging)
		}
		if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate != nil {
			f0f17 := &svcsdk.ViewerCertificate{}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.ACMCertificateARN != nil {
				f0f17.SetACMCertificateArn(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.ACMCertificateARN)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.Certificate != nil {
				f0f17.SetCertificate(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.Certificate)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CertificateSource != nil {
				f0f17.SetCertificateSource(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CertificateSource)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate != nil {
				f0f17.SetCloudFrontDefaultCertificate(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.IAMCertificateID != nil {
				f0f17.SetIAMCertificateId(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.IAMCertificateID)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.MinimumProtocolVersion != nil {
				f0f17.SetMinimumProtocolVersion(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.MinimumProtocolVersion)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.SSLSupportMethod != nil {
				f0f17.SetSSLSupportMethod(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.SSLSupportMethod)
			}
			f0.SetViewerCertificate(f0f17)
		}
		if cr.Spec.ForProvider.DistributionConfig.WebACLID != nil {
			f0.SetWebACLId(*cr.Spec.ForProvider.DistributionConfig.WebACLID)
		}
		res.SetDistributionConfig(f0)
	}

	return res
}

// GenerateUpdateDistributionInput returns an update input.
func GenerateUpdateDistributionInput(cr *svcapitypes.Distribution) *svcsdk.UpdateDistributionInput {
	res := &svcsdk.UpdateDistributionInput{}

	if cr.Spec.ForProvider.DistributionConfig != nil {
		f0 := &svcsdk.DistributionConfig{}
		if cr.Spec.ForProvider.DistributionConfig.Aliases != nil {
			f0f0 := &svcsdk.Aliases{}
			if cr.Spec.ForProvider.DistributionConfig.Aliases.Items != nil {
				f0f0f0 := []*string{}
				for _, f0f0f0iter := range cr.Spec.ForProvider.DistributionConfig.Aliases.Items {
					var f0f0f0elem string
					f0f0f0elem = *f0f0f0iter
					f0f0f0 = append(f0f0f0, &f0f0f0elem)
				}
				f0f0.SetItems(f0f0f0)
			}
			f0.SetAliases(f0f0)
		}
		if cr.Spec.ForProvider.DistributionConfig.CacheBehaviors != nil {
			f0f1 := &svcsdk.CacheBehaviors{}
			if cr.Spec.ForProvider.DistributionConfig.CacheBehaviors.Items != nil {
				f0f1f0 := []*svcsdk.CacheBehavior{}
				for _, f0f1f0iter := range cr.Spec.ForProvider.DistributionConfig.CacheBehaviors.Items {
					f0f1f0elem := &svcsdk.CacheBehavior{}
					if f0f1f0iter.AllowedMethods != nil {
						f0f1f0elemf0 := &svcsdk.AllowedMethods{}
						if f0f1f0iter.AllowedMethods.CachedMethods != nil {
							f0f1f0elemf0f0 := &svcsdk.CachedMethods{}
							if f0f1f0iter.AllowedMethods.CachedMethods.Items != nil {
								f0f1f0elemf0f0f0 := []*string{}
								for _, f0f1f0elemf0f0f0iter := range f0f1f0iter.AllowedMethods.CachedMethods.Items {
									var f0f1f0elemf0f0f0elem string
									f0f1f0elemf0f0f0elem = *f0f1f0elemf0f0f0iter
									f0f1f0elemf0f0f0 = append(f0f1f0elemf0f0f0, &f0f1f0elemf0f0f0elem)
								}
								f0f1f0elemf0f0.SetItems(f0f1f0elemf0f0f0)
							}
							f0f1f0elemf0.SetCachedMethods(f0f1f0elemf0f0)
						}
						if f0f1f0iter.AllowedMethods.Items != nil {
							f0f1f0elemf0f1 := []*string{}
							for _, f0f1f0elemf0f1iter := range f0f1f0iter.AllowedMethods.Items {
								var f0f1f0elemf0f1elem string
								f0f1f0elemf0f1elem = *f0f1f0elemf0f1iter
								f0f1f0elemf0f1 = append(f0f1f0elemf0f1, &f0f1f0elemf0f1elem)
							}
							f0f1f0elemf0.SetItems(f0f1f0elemf0f1)
						}
						f0f1f0elem.SetAllowedMethods(f0f1f0elemf0)
					}
					if f0f1f0iter.CachePolicyID != nil {
						f0f1f0elem.SetCachePolicyId(*f0f1f0iter.CachePolicyID)
					}
					if f0f1f0iter.Compress != nil {
						f0f1f0elem.SetCompress(*f0f1f0iter.Compress)
					}
					if f0f1f0iter.DefaultTTL != nil {
						f0f1f0elem.SetDefaultTTL(*f0f1f0iter.DefaultTTL)
					}
					if f0f1f0iter.FieldLevelEncryptionID != nil {
						f0f1f0elem.SetFieldLevelEncryptionId(*f0f1f0iter.FieldLevelEncryptionID)
					}
					if f0f1f0iter.ForwardedValues != nil {
						f0f1f0elemf5 := &svcsdk.ForwardedValues{}
						if f0f1f0iter.ForwardedValues.Cookies != nil {
							f0f1f0elemf5f0 := &svcsdk.CookiePreference{}
							if f0f1f0iter.ForwardedValues.Cookies.Forward != nil {
								f0f1f0elemf5f0.SetForward(*f0f1f0iter.ForwardedValues.Cookies.Forward)
							}
							if f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames != nil {
								f0f1f0elemf5f0f1 := &svcsdk.CookieNames{}
								if f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Items != nil {
									f0f1f0elemf5f0f1f0 := []*string{}
									for _, f0f1f0elemf5f0f1f0iter := range f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Items {
										var f0f1f0elemf5f0f1f0elem string
										f0f1f0elemf5f0f1f0elem = *f0f1f0elemf5f0f1f0iter
										f0f1f0elemf5f0f1f0 = append(f0f1f0elemf5f0f1f0, &f0f1f0elemf5f0f1f0elem)
									}
									f0f1f0elemf5f0f1.SetItems(f0f1f0elemf5f0f1f0)
								}
								if f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Quantity != nil {
									f0f1f0elemf5f0f1.SetQuantity(*f0f1f0iter.ForwardedValues.Cookies.WhitelistedNames.Quantity)
								}
								f0f1f0elemf5f0.SetWhitelistedNames(f0f1f0elemf5f0f1)
							}
							f0f1f0elemf5.SetCookies(f0f1f0elemf5f0)
						}
						if f0f1f0iter.ForwardedValues.Headers != nil {
							f0f1f0elemf5f1 := &svcsdk.Headers{}
							if f0f1f0iter.ForwardedValues.Headers.Items != nil {
								f0f1f0elemf5f1f0 := []*string{}
								for _, f0f1f0elemf5f1f0iter := range f0f1f0iter.ForwardedValues.Headers.Items {
									var f0f1f0elemf5f1f0elem string
									f0f1f0elemf5f1f0elem = *f0f1f0elemf5f1f0iter
									f0f1f0elemf5f1f0 = append(f0f1f0elemf5f1f0, &f0f1f0elemf5f1f0elem)
								}
								f0f1f0elemf5f1.SetItems(f0f1f0elemf5f1f0)
							}
							f0f1f0elemf5.SetHeaders(f0f1f0elemf5f1)
						}
						if f0f1f0iter.ForwardedValues.QueryString != nil {
							f0f1f0elemf5.SetQueryString(*f0f1f0iter.ForwardedValues.QueryString)
						}
						if f0f1f0iter.ForwardedValues.QueryStringCacheKeys != nil {
							f0f1f0elemf5f3 := &svcsdk.QueryStringCacheKeys{}
							if f0f1f0iter.ForwardedValues.QueryStringCacheKeys.Items != nil {
								f0f1f0elemf5f3f0 := []*string{}
								for _, f0f1f0elemf5f3f0iter := range f0f1f0iter.ForwardedValues.QueryStringCacheKeys.Items {
									var f0f1f0elemf5f3f0elem string
									f0f1f0elemf5f3f0elem = *f0f1f0elemf5f3f0iter
									f0f1f0elemf5f3f0 = append(f0f1f0elemf5f3f0, &f0f1f0elemf5f3f0elem)
								}
								f0f1f0elemf5f3.SetItems(f0f1f0elemf5f3f0)
							}
							f0f1f0elemf5.SetQueryStringCacheKeys(f0f1f0elemf5f3)
						}
						f0f1f0elem.SetForwardedValues(f0f1f0elemf5)
					}
					if f0f1f0iter.FunctionAssociations != nil {
						f0f1f0elemf6 := &svcsdk.FunctionAssociations{}
						if f0f1f0iter.FunctionAssociations.Items != nil {
							f0f1f0elemf6f0 := []*svcsdk.FunctionAssociation{}
							for _, f0f1f0elemf6f0iter := range f0f1f0iter.FunctionAssociations.Items {
								f0f1f0elemf6f0elem := &svcsdk.FunctionAssociation{}
								if f0f1f0elemf6f0iter.EventType != nil {
									f0f1f0elemf6f0elem.SetEventType(*f0f1f0elemf6f0iter.EventType)
								}
								if f0f1f0elemf6f0iter.FunctionARN != nil {
									f0f1f0elemf6f0elem.SetFunctionARN(*f0f1f0elemf6f0iter.FunctionARN)
								}
								f0f1f0elemf6f0 = append(f0f1f0elemf6f0, f0f1f0elemf6f0elem)
							}
							f0f1f0elemf6.SetItems(f0f1f0elemf6f0)
						}
						f0f1f0elem.SetFunctionAssociations(f0f1f0elemf6)
					}
					if f0f1f0iter.LambdaFunctionAssociations != nil {
						f0f1f0elemf7 := &svcsdk.LambdaFunctionAssociations{}
						if f0f1f0iter.LambdaFunctionAssociations.Items != nil {
							f0f1f0elemf7f0 := []*svcsdk.LambdaFunctionAssociation{}
							for _, f0f1f0elemf7f0iter := range f0f1f0iter.LambdaFunctionAssociations.Items {
								f0f1f0elemf7f0elem := &svcsdk.LambdaFunctionAssociation{}
								if f0f1f0elemf7f0iter.EventType != nil {
									f0f1f0elemf7f0elem.SetEventType(*f0f1f0elemf7f0iter.EventType)
								}
								if f0f1f0elemf7f0iter.IncludeBody != nil {
									f0f1f0elemf7f0elem.SetIncludeBody(*f0f1f0elemf7f0iter.IncludeBody)
								}
								if f0f1f0elemf7f0iter.LambdaFunctionARN != nil {
									f0f1f0elemf7f0elem.SetLambdaFunctionARN(*f0f1f0elemf7f0iter.LambdaFunctionARN)
								}
								f0f1f0elemf7f0 = append(f0f1f0elemf7f0, f0f1f0elemf7f0elem)
							}
							f0f1f0elemf7.SetItems(f0f1f0elemf7f0)
						}
						f0f1f0elem.SetLambdaFunctionAssociations(f0f1f0elemf7)
					}
					if f0f1f0iter.MaxTTL != nil {
						f0f1f0elem.SetMaxTTL(*f0f1f0iter.MaxTTL)
					}
					if f0f1f0iter.MinTTL != nil {
						f0f1f0elem.SetMinTTL(*f0f1f0iter.MinTTL)
					}
					if f0f1f0iter.OriginRequestPolicyID != nil {
						f0f1f0elem.SetOriginRequestPolicyId(*f0f1f0iter.OriginRequestPolicyID)
					}
					if f0f1f0iter.PathPattern != nil {
						f0f1f0elem.SetPathPattern(*f0f1f0iter.PathPattern)
					}
					if f0f1f0iter.RealtimeLogConfigARN != nil {
						f0f1f0elem.SetRealtimeLogConfigArn(*f0f1f0iter.RealtimeLogConfigARN)
					}
					if f0f1f0iter.ResponseHeadersPolicyID != nil {
						f0f1f0elem.SetResponseHeadersPolicyId(*f0f1f0iter.ResponseHeadersPolicyID)
					}
					if f0f1f0iter.SmoothStreaming != nil {
						f0f1f0elem.SetSmoothStreaming(*f0f1f0iter.SmoothStreaming)
					}
					if f0f1f0iter.TargetOriginID != nil {
						f0f1f0elem.SetTargetOriginId(*f0f1f0iter.TargetOriginID)
					}
					if f0f1f0iter.TrustedKeyGroups != nil {
						f0f1f0elemf16 := &svcsdk.TrustedKeyGroups{}
						if f0f1f0iter.TrustedKeyGroups.Enabled != nil {
							f0f1f0elemf16.SetEnabled(*f0f1f0iter.TrustedKeyGroups.Enabled)
						}
						if f0f1f0iter.TrustedKeyGroups.Items != nil {
							f0f1f0elemf16f1 := []*string{}
							for _, f0f1f0elemf16f1iter := range f0f1f0iter.TrustedKeyGroups.Items {
								var f0f1f0elemf16f1elem string
								f0f1f0elemf16f1elem = *f0f1f0elemf16f1iter
								f0f1f0elemf16f1 = append(f0f1f0elemf16f1, &f0f1f0elemf16f1elem)
							}
							f0f1f0elemf16.SetItems(f0f1f0elemf16f1)
						}
						f0f1f0elem.SetTrustedKeyGroups(f0f1f0elemf16)
					}
					if f0f1f0iter.TrustedSigners != nil {
						f0f1f0elemf17 := &svcsdk.TrustedSigners{}
						if f0f1f0iter.TrustedSigners.Enabled != nil {
							f0f1f0elemf17.SetEnabled(*f0f1f0iter.TrustedSigners.Enabled)
						}
						if f0f1f0iter.TrustedSigners.Items != nil {
							f0f1f0elemf17f1 := []*string{}
							for _, f0f1f0elemf17f1iter := range f0f1f0iter.TrustedSigners.Items {
								var f0f1f0elemf17f1elem string
								f0f1f0elemf17f1elem = *f0f1f0elemf17f1iter
								f0f1f0elemf17f1 = append(f0f1f0elemf17f1, &f0f1f0elemf17f1elem)
							}
							f0f1f0elemf17.SetItems(f0f1f0elemf17f1)
						}
						f0f1f0elem.SetTrustedSigners(f0f1f0elemf17)
					}
					if f0f1f0iter.ViewerProtocolPolicy != nil {
						f0f1f0elem.SetViewerProtocolPolicy(*f0f1f0iter.ViewerProtocolPolicy)
					}
					f0f1f0 = append(f0f1f0, f0f1f0elem)
				}
				f0f1.SetItems(f0f1f0)
			}
			f0.SetCacheBehaviors(f0f1)
		}
		if cr.Spec.ForProvider.DistributionConfig.CallerReference != nil {
			f0.SetCallerReference(*cr.Spec.ForProvider.DistributionConfig.CallerReference)
		}
		if cr.Spec.ForProvider.DistributionConfig.Comment != nil {
			f0.SetComment(*cr.Spec.ForProvider.DistributionConfig.Comment)
		}
		if cr.Spec.ForProvider.DistributionConfig.ContinuousDeploymentPolicyID != nil {
			f0.SetContinuousDeploymentPolicyId(*cr.Spec.ForProvider.DistributionConfig.ContinuousDeploymentPolicyID)
		}
		if cr.Spec.ForProvider.DistributionConfig.CustomErrorResponses != nil {
			f0f5 := &svcsdk.CustomErrorResponses{}
			if cr.Spec.ForProvider.DistributionConfig.CustomErrorResponses.Items != nil {
				f0f5f0 := []*svcsdk.CustomErrorResponse{}
				for _, f0f5f0iter := range cr.Spec.ForProvider.DistributionConfig.CustomErrorResponses.Items {
					f0f5f0elem := &svcsdk.CustomErrorResponse{}
					if f0f5f0iter.ErrorCachingMinTTL != nil {
						f0f5f0elem.SetErrorCachingMinTTL(*f0f5f0iter.ErrorCachingMinTTL)
					}
					if f0f5f0iter.ErrorCode != nil {
						f0f5f0elem.SetErrorCode(*f0f5f0iter.ErrorCode)
					}
					if f0f5f0iter.ResponseCode != nil {
						f0f5f0elem.SetResponseCode(*f0f5f0iter.ResponseCode)
					}
					if f0f5f0iter.ResponsePagePath != nil {
						f0f5f0elem.SetResponsePagePath(*f0f5f0iter.ResponsePagePath)
					}
					f0f5f0 = append(f0f5f0, f0f5f0elem)
				}
				f0f5.SetItems(f0f5f0)
			}
			f0.SetCustomErrorResponses(f0f5)
		}
		if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior != nil {
			f0f6 := &svcsdk.DefaultCacheBehavior{}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods != nil {
				f0f6f0 := &svcsdk.AllowedMethods{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods != nil {
					f0f6f0f0 := &svcsdk.CachedMethods{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items != nil {
						f0f6f0f0f0 := []*string{}
						for _, f0f6f0f0f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items {
							var f0f6f0f0f0elem string
							f0f6f0f0f0elem = *f0f6f0f0f0iter
							f0f6f0f0f0 = append(f0f6f0f0f0, &f0f6f0f0f0elem)
						}
						f0f6f0f0.SetItems(f0f6f0f0f0)
					}
					f0f6f0.SetCachedMethods(f0f6f0f0)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items != nil {
					f0f6f0f1 := []*string{}
					for _, f0f6f0f1iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items {
						var f0f6f0f1elem string
						f0f6f0f1elem = *f0f6f0f1iter
						f0f6f0f1 = append(f0f6f0f1, &f0f6f0f1elem)
					}
					f0f6f0.SetItems(f0f6f0f1)
				}
				f0f6.SetAllowedMethods(f0f6f0)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.CachePolicyID != nil {
				f0f6.SetCachePolicyId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.CachePolicyID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.Compress != nil {
				f0f6.SetCompress(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.Compress)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.DefaultTTL != nil {
				f0f6.SetDefaultTTL(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.DefaultTTL)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionID != nil {
				f0f6.SetFieldLevelEncryptionId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues != nil {
				f0f6f5 := &svcsdk.ForwardedValues{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies != nil {
					f0f6f5f0 := &svcsdk.CookiePreference{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward != nil {
						f0f6f5f0.SetForward(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward)
					}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames != nil {
						f0f6f5f0f1 := &svcsdk.CookieNames{}
						if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items != nil {
							f0f6f5f0f1f0 := []*string{}
							for _, f0f6f5f0f1f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items {
								var f0f6f5f0f1f0elem string
								f0f6f5f0f1f0elem = *f0f6f5f0f1f0iter
								f0f6f5f0f1f0 = append(f0f6f5f0f1f0, &f0f6f5f0f1f0elem)
							}
							f0f6f5f0f1.SetItems(f0f6f5f0f1f0)
						}
						if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity != nil {
							f0f6f5f0f1.SetQuantity(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity)
						}
						f0f6f5f0.SetWhitelistedNames(f0f6f5f0f1)
					}
					f0f6f5.SetCookies(f0f6f5f0)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers != nil {
					f0f6f5f1 := &svcsdk.Headers{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items != nil {
						f0f6f5f1f0 := []*string{}
						for _, f0f6f5f1f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items {
							var f0f6f5f1f0elem string
							f0f6f5f1f0elem = *f0f6f5f1f0iter
							f0f6f5f1f0 = append(f0f6f5f1f0, &f0f6f5f1f0elem)
						}
						f0f6f5f1.SetItems(f0f6f5f1f0)
					}
					f0f6f5.SetHeaders(f0f6f5f1)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString != nil {
					f0f6f5.SetQueryString(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys != nil {
					f0f6f5f3 := &svcsdk.QueryStringCacheKeys{}
					if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items != nil {
						f0f6f5f3f0 := []*string{}
						for _, f0f6f5f3f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items {
							var f0f6f5f3f0elem string
							f0f6f5f3f0elem = *f0f6f5f3f0iter
							f0f6f5f3f0 = append(f0f6f5f3f0, &f0f6f5f3f0elem)
						}
						f0f6f5f3.SetItems(f0f6f5f3f0)
					}
					f0f6f5.SetQueryStringCacheKeys(f0f6f5f3)
				}
				f0f6.SetForwardedValues(f0f6f5)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FunctionAssociations != nil {
				f0f6f6 := &svcsdk.FunctionAssociations{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items != nil {
					f0f6f6f0 := []*svcsdk.FunctionAssociation{}
					for _, f0f6f6f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items {
						f0f6f6f0elem := &svcsdk.FunctionAssociation{}
						if f0f6f6f0iter.EventType != nil {
							f0f6f6f0elem.SetEventType(*f0f6f6f0iter.EventType)
						}
						if f0f6f6f0iter.FunctionARN != nil {
							f0f6f6f0elem.SetFunctionARN(*f0f6f6f0iter.FunctionARN)
						}
						f0f6f6f0 = append(f0f6f6f0, f0f6f6f0elem)
					}
					f0f6f6.SetItems(f0f6f6f0)
				}
				f0f6.SetFunctionAssociations(f0f6f6)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations != nil {
				f0f6f7 := &svcsdk.LambdaFunctionAssociations{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items != nil {
					f0f6f7f0 := []*svcsdk.LambdaFunctionAssociation{}
					for _, f0f6f7f0iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items {
						f0f6f7f0elem := &svcsdk.LambdaFunctionAssociation{}
						if f0f6f7f0iter.EventType != nil {
							f0f6f7f0elem.SetEventType(*f0f6f7f0iter.EventType)
						}
						if f0f6f7f0iter.IncludeBody != nil {
							f0f6f7f0elem.SetIncludeBody(*f0f6f7f0iter.IncludeBody)
						}
						if f0f6f7f0iter.LambdaFunctionARN != nil {
							f0f6f7f0elem.SetLambdaFunctionARN(*f0f6f7f0iter.LambdaFunctionARN)
						}
						f0f6f7f0 = append(f0f6f7f0, f0f6f7f0elem)
					}
					f0f6f7.SetItems(f0f6f7f0)
				}
				f0f6.SetLambdaFunctionAssociations(f0f6f7)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MaxTTL != nil {
				f0f6.SetMaxTTL(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MaxTTL)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MinTTL != nil {
				f0f6.SetMinTTL(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.MinTTL)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyID != nil {
				f0f6.SetOriginRequestPolicyId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigARN != nil {
				f0f6.SetRealtimeLogConfigArn(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigARN)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ResponseHeadersPolicyID != nil {
				f0f6.SetResponseHeadersPolicyId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ResponseHeadersPolicyID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.SmoothStreaming != nil {
				f0f6.SetSmoothStreaming(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.SmoothStreaming)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TargetOriginID != nil {
				f0f6.SetTargetOriginId(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TargetOriginID)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups != nil {
				f0f6f15 := &svcsdk.TrustedKeyGroups{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled != nil {
					f0f6f15.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items != nil {
					f0f6f15f1 := []*string{}
					for _, f0f6f15f1iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items {
						var f0f6f15f1elem string
						f0f6f15f1elem = *f0f6f15f1iter
						f0f6f15f1 = append(f0f6f15f1, &f0f6f15f1elem)
					}
					f0f6f15.SetItems(f0f6f15f1)
				}
				f0f6.SetTrustedKeyGroups(f0f6f15)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners != nil {
				f0f6f16 := &svcsdk.TrustedSigners{}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled != nil {
					f0f6f16.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled)
				}
				if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items != nil {
					f0f6f16f1 := []*string{}
					for _, f0f6f16f1iter := range cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items {
						var f0f6f16f1elem string
						f0f6f16f1elem = *f0f6f16f1iter
						f0f6f16f1 = append(f0f6f16f1, &f0f6f16f1elem)
					}
					f0f6f16.SetItems(f0f6f16f1)
				}
				f0f6.SetTrustedSigners(f0f6f16)
			}
			if cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy != nil {
				f0f6.SetViewerProtocolPolicy(*cr.Spec.ForProvider.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy)
			}
			f0.SetDefaultCacheBehavior(f0f6)
		}
		if cr.Spec.ForProvider.DistributionConfig.DefaultRootObject != nil {
			f0.SetDefaultRootObject(*cr.Spec.ForProvider.DistributionConfig.DefaultRootObject)
		}
		if cr.Spec.ForProvider.DistributionConfig.Enabled != nil {
			f0.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.Enabled)
		}
		if cr.Spec.ForProvider.DistributionConfig.HTTPVersion != nil {
			f0.SetHttpVersion(*cr.Spec.ForProvider.DistributionConfig.HTTPVersion)
		}
		if cr.Spec.ForProvider.DistributionConfig.IsIPV6Enabled != nil {
			f0.SetIsIPV6Enabled(*cr.Spec.ForProvider.DistributionConfig.IsIPV6Enabled)
		}
		if cr.Spec.ForProvider.DistributionConfig.Logging != nil {
			f0f11 := &svcsdk.LoggingConfig{}
			if cr.Spec.ForProvider.DistributionConfig.Logging.Bucket != nil {
				f0f11.SetBucket(*cr.Spec.ForProvider.DistributionConfig.Logging.Bucket)
			}
			if cr.Spec.ForProvider.DistributionConfig.Logging.Enabled != nil {
				f0f11.SetEnabled(*cr.Spec.ForProvider.DistributionConfig.Logging.Enabled)
			}
			if cr.Spec.ForProvider.DistributionConfig.Logging.IncludeCookies != nil {
				f0f11.SetIncludeCookies(*cr.Spec.ForProvider.DistributionConfig.Logging.IncludeCookies)
			}
			if cr.Spec.ForProvider.DistributionConfig.Logging.Prefix != nil {
				f0f11.SetPrefix(*cr.Spec.ForProvider.DistributionConfig.Logging.Prefix)
			}
			f0.SetLogging(f0f11)
		}
		if cr.Spec.ForProvider.DistributionConfig.OriginGroups != nil {
			f0f12 := &svcsdk.OriginGroups{}
			if cr.Spec.ForProvider.DistributionConfig.OriginGroups.Items != nil {
				f0f12f0 := []*svcsdk.OriginGroup{}
				for _, f0f12f0iter := range cr.Spec.ForProvider.DistributionConfig.OriginGroups.Items {
					f0f12f0elem := &svcsdk.OriginGroup{}
					if f0f12f0iter.FailoverCriteria != nil {
						f0f12f0elemf0 := &svcsdk.OriginGroupFailoverCriteria{}
						if f0f12f0iter.FailoverCriteria.StatusCodes != nil {
							f0f12f0elemf0f0 := &svcsdk.StatusCodes{}
							if f0f12f0iter.FailoverCriteria.StatusCodes.Items != nil {
								f0f12f0elemf0f0f0 := []*int64{}
								for _, f0f12f0elemf0f0f0iter := range f0f12f0iter.FailoverCriteria.StatusCodes.Items {
									var f0f12f0elemf0f0f0elem int64
									f0f12f0elemf0f0f0elem = *f0f12f0elemf0f0f0iter
									f0f12f0elemf0f0f0 = append(f0f12f0elemf0f0f0, &f0f12f0elemf0f0f0elem)
								}
								f0f12f0elemf0f0.SetItems(f0f12f0elemf0f0f0)
							}
							f0f12f0elemf0.SetStatusCodes(f0f12f0elemf0f0)
						}
						f0f12f0elem.SetFailoverCriteria(f0f12f0elemf0)
					}
					if f0f12f0iter.ID != nil {
						f0f12f0elem.SetId(*f0f12f0iter.ID)
					}
					if f0f12f0iter.Members != nil {
						f0f12f0elemf2 := &svcsdk.OriginGroupMembers{}
						if f0f12f0iter.Members.Items != nil {
							f0f12f0elemf2f0 := []*svcsdk.OriginGroupMember{}
							for _, f0f12f0elemf2f0iter := range f0f12f0iter.Members.Items {
								f0f12f0elemf2f0elem := &svcsdk.OriginGroupMember{}
								if f0f12f0elemf2f0iter.OriginID != nil {
									f0f12f0elemf2f0elem.SetOriginId(*f0f12f0elemf2f0iter.OriginID)
								}
								f0f12f0elemf2f0 = append(f0f12f0elemf2f0, f0f12f0elemf2f0elem)
							}
							f0f12f0elemf2.SetItems(f0f12f0elemf2f0)
						}
						if f0f12f0iter.Members.Quantity != nil {
							f0f12f0elemf2.SetQuantity(*f0f12f0iter.Members.Quantity)
						}
						f0f12f0elem.SetMembers(f0f12f0elemf2)
					}
					f0f12f0 = append(f0f12f0, f0f12f0elem)
				}
				f0f12.SetItems(f0f12f0)
			}
			f0.SetOriginGroups(f0f12)
		}
		if cr.Spec.ForProvider.DistributionConfig.Origins != nil {
			f0f13 := &svcsdk.Origins{}
			if cr.Spec.ForProvider.DistributionConfig.Origins.Items != nil {
				f0f13f0 := []*svcsdk.Origin{}
				for _, f0f13f0iter := range cr.Spec.ForProvider.DistributionConfig.Origins.Items {
					f0f13f0elem := &svcsdk.Origin{}
					if f0f13f0iter.ConnectionAttempts != nil {
						f0f13f0elem.SetConnectionAttempts(*f0f13f0iter.ConnectionAttempts)
					}
					if f0f13f0iter.ConnectionTimeout != nil {
						f0f13f0elem.SetConnectionTimeout(*f0f13f0iter.ConnectionTimeout)
					}
					if f0f13f0iter.CustomHeaders != nil {
						f0f13f0elemf2 := &svcsdk.CustomHeaders{}
						if f0f13f0iter.CustomHeaders.Items != nil {
							f0f13f0elemf2f0 := []*svcsdk.OriginCustomHeader{}
							for _, f0f13f0elemf2f0iter := range f0f13f0iter.CustomHeaders.Items {
								f0f13f0elemf2f0elem := &svcsdk.OriginCustomHeader{}
								if f0f13f0elemf2f0iter.HeaderName != nil {
									f0f13f0elemf2f0elem.SetHeaderName(*f0f13f0elemf2f0iter.HeaderName)
								}
								if f0f13f0elemf2f0iter.HeaderValue != nil {
									f0f13f0elemf2f0elem.SetHeaderValue(*f0f13f0elemf2f0iter.HeaderValue)
								}
								f0f13f0elemf2f0 = append(f0f13f0elemf2f0, f0f13f0elemf2f0elem)
							}
							f0f13f0elemf2.SetItems(f0f13f0elemf2f0)
						}
						f0f13f0elem.SetCustomHeaders(f0f13f0elemf2)
					}
					if f0f13f0iter.CustomOriginConfig != nil {
						f0f13f0elemf3 := &svcsdk.CustomOriginConfig{}
						if f0f13f0iter.CustomOriginConfig.HTTPPort != nil {
							f0f13f0elemf3.SetHTTPPort(*f0f13f0iter.CustomOriginConfig.HTTPPort)
						}
						if f0f13f0iter.CustomOriginConfig.HTTPSPort != nil {
							f0f13f0elemf3.SetHTTPSPort(*f0f13f0iter.CustomOriginConfig.HTTPSPort)
						}
						if f0f13f0iter.CustomOriginConfig.OriginKeepaliveTimeout != nil {
							f0f13f0elemf3.SetOriginKeepaliveTimeout(*f0f13f0iter.CustomOriginConfig.OriginKeepaliveTimeout)
						}
						if f0f13f0iter.CustomOriginConfig.OriginProtocolPolicy != nil {
							f0f13f0elemf3.SetOriginProtocolPolicy(*f0f13f0iter.CustomOriginConfig.OriginProtocolPolicy)
						}
						if f0f13f0iter.CustomOriginConfig.OriginReadTimeout != nil {
							f0f13f0elemf3.SetOriginReadTimeout(*f0f13f0iter.CustomOriginConfig.OriginReadTimeout)
						}
						if f0f13f0iter.CustomOriginConfig.OriginSSLProtocols != nil {
							f0f13f0elemf3f5 := &svcsdk.OriginSslProtocols{}
							if f0f13f0iter.CustomOriginConfig.OriginSSLProtocols.Items != nil {
								f0f13f0elemf3f5f0 := []*string{}
								for _, f0f13f0elemf3f5f0iter := range f0f13f0iter.CustomOriginConfig.OriginSSLProtocols.Items {
									var f0f13f0elemf3f5f0elem string
									f0f13f0elemf3f5f0elem = *f0f13f0elemf3f5f0iter
									f0f13f0elemf3f5f0 = append(f0f13f0elemf3f5f0, &f0f13f0elemf3f5f0elem)
								}
								f0f13f0elemf3f5.SetItems(f0f13f0elemf3f5f0)
							}
							f0f13f0elemf3.SetOriginSslProtocols(f0f13f0elemf3f5)
						}
						f0f13f0elem.SetCustomOriginConfig(f0f13f0elemf3)
					}
					if f0f13f0iter.DomainName != nil {
						f0f13f0elem.SetDomainName(*f0f13f0iter.DomainName)
					}
					if f0f13f0iter.ID != nil {
						f0f13f0elem.SetId(*f0f13f0iter.ID)
					}
					if f0f13f0iter.OriginAccessControlID != nil {
						f0f13f0elem.SetOriginAccessControlId(*f0f13f0iter.OriginAccessControlID)
					}
					if f0f13f0iter.OriginPath != nil {
						f0f13f0elem.SetOriginPath(*f0f13f0iter.OriginPath)
					}
					if f0f13f0iter.OriginShield != nil {
						f0f13f0elemf8 := &svcsdk.OriginShield{}
						if f0f13f0iter.OriginShield.Enabled != nil {
							f0f13f0elemf8.SetEnabled(*f0f13f0iter.OriginShield.Enabled)
						}
						if f0f13f0iter.OriginShield.OriginShieldRegion != nil {
							f0f13f0elemf8.SetOriginShieldRegion(*f0f13f0iter.OriginShield.OriginShieldRegion)
						}
						f0f13f0elem.SetOriginShield(f0f13f0elemf8)
					}
					if f0f13f0iter.S3OriginConfig != nil {
						f0f13f0elemf9 := &svcsdk.S3OriginConfig{}
						if f0f13f0iter.S3OriginConfig.OriginAccessIdentity != nil {
							f0f13f0elemf9.SetOriginAccessIdentity(*f0f13f0iter.S3OriginConfig.OriginAccessIdentity)
						}
						f0f13f0elem.SetS3OriginConfig(f0f13f0elemf9)
					}
					f0f13f0 = append(f0f13f0, f0f13f0elem)
				}
				f0f13.SetItems(f0f13f0)
			}
			f0.SetOrigins(f0f13)
		}
		if cr.Spec.ForProvider.DistributionConfig.PriceClass != nil {
			f0.SetPriceClass(*cr.Spec.ForProvider.DistributionConfig.PriceClass)
		}
		if cr.Spec.ForProvider.DistributionConfig.Restrictions != nil {
			f0f15 := &svcsdk.Restrictions{}
			if cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction != nil {
				f0f15f0 := &svcsdk.GeoRestriction{}
				if cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.Items != nil {
					f0f15f0f0 := []*string{}
					for _, f0f15f0f0iter := range cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.Items {
						var f0f15f0f0elem string
						f0f15f0f0elem = *f0f15f0f0iter
						f0f15f0f0 = append(f0f15f0f0, &f0f15f0f0elem)
					}
					f0f15f0.SetItems(f0f15f0f0)
				}
				if cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.RestrictionType != nil {
					f0f15f0.SetRestrictionType(*cr.Spec.ForProvider.DistributionConfig.Restrictions.GeoRestriction.RestrictionType)
				}
				f0f15.SetGeoRestriction(f0f15f0)
			}
			f0.SetRestrictions(f0f15)
		}
		if cr.Spec.ForProvider.DistributionConfig.Staging != nil {
			f0.SetStaging(*cr.Spec.ForProvider.DistributionConfig.Staging)
		}
		if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate != nil {
			f0f17 := &svcsdk.ViewerCertificate{}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.ACMCertificateARN != nil {
				f0f17.SetACMCertificateArn(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.ACMCertificateARN)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.Certificate != nil {
				f0f17.SetCertificate(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.Certificate)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CertificateSource != nil {
				f0f17.SetCertificateSource(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CertificateSource)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate != nil {
				f0f17.SetCloudFrontDefaultCertificate(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.IAMCertificateID != nil {
				f0f17.SetIAMCertificateId(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.IAMCertificateID)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.MinimumProtocolVersion != nil {
				f0f17.SetMinimumProtocolVersion(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.MinimumProtocolVersion)
			}
			if cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.SSLSupportMethod != nil {
				f0f17.SetSSLSupportMethod(*cr.Spec.ForProvider.DistributionConfig.ViewerCertificate.SSLSupportMethod)
			}
			f0.SetViewerCertificate(f0f17)
		}
		if cr.Spec.ForProvider.DistributionConfig.WebACLID != nil {
			f0.SetWebACLId(*cr.Spec.ForProvider.DistributionConfig.WebACLID)
		}
		res.SetDistributionConfig(f0)
	}

	return res
}

// GenerateDeleteDistributionInput returns a deletion input.
func GenerateDeleteDistributionInput(cr *svcapitypes.Distribution) *svcsdk.DeleteDistributionInput {
	res := &svcsdk.DeleteDistributionInput{}

	return res
}

// IsNotFound returns whether the given error is of type NotFound or not.
func IsNotFound(err error) bool {
	awsErr, ok := err.(awserr.Error)
	return ok && awsErr.Code() == "NoSuchDistribution"
}
